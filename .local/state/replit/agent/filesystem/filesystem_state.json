{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Ramanujan College Website\n\n## Overview\n\nThis is a modern, responsive website for Ramanujan College, University of Delhi - a NAAC A++ graded educational institution. The application serves as the college's digital presence, providing information about academics, admissions, news, events, and student life. Built with React and TypeScript on the frontend, Express.js on the backend, and PostgreSQL for data persistence, the site follows modern web development practices with a focus on performance, accessibility, and user experience.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development patterns\n- **Routing**: Wouter for lightweight client-side routing without the overhead of React Router\n- **UI Components**: shadcn/ui component library built on Radix UI primitives for accessibility and customization\n- **Styling**: Tailwind CSS with custom design tokens and CSS variables for consistent theming\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework for RESTful API endpoints\n- **Language**: TypeScript for end-to-end type safety\n- **API Design**: RESTful architecture with dedicated routes for notices, events, news, departments, courses, faculty, and facilities\n- **Validation**: Zod schemas shared between frontend and backend for consistent data validation\n- **Storage Interface**: Abstract storage interface (IStorage) with in-memory implementation, designed for easy database integration\n\n### Data Layer\n- **ORM**: Drizzle ORM configured for PostgreSQL with type-safe database operations\n- **Database**: PostgreSQL (via Neon serverless) for production-ready data persistence\n- **Schema**: Comprehensive schema covering users, notices, events, news, departments, courses, faculty, and facilities\n- **Migrations**: Drizzle Kit for database schema management and migrations\n\n### UI/UX Design System\n- **Component Library**: shadcn/ui providing consistent, accessible components\n- **Design Tokens**: CSS custom properties for colors, spacing, typography, and shadows\n- **Typography**: Inter for sans-serif, Playfair Display for serif headings\n- **Responsive Design**: Mobile-first approach with breakpoint-based layouts\n- **Dark Mode**: Built-in support through CSS variables and class-based theme switching\n\n### Content Management\n- **Notices**: Categorized announcements with priority levels and publication dates\n- **Events**: Time-based events with location and category information\n- **News**: Featured articles with author attribution and image support\n- **Academic Data**: Departments, courses, and faculty information with relationships\n\n### Development Environment\n- **Hot Reload**: Vite development server with HMR for rapid development\n- **Code Quality**: TypeScript strict mode with comprehensive type checking\n- **Path Aliases**: Configured for clean imports (@/ for client, @shared for common code)\n- **Error Handling**: Runtime error overlay for development debugging\n- **Replit Configuration**: Configured with workflow on port 5000, allowedHosts enabled for proxy compatibility\n\n### Replit Environment Setup\n- **Workflow**: \"Start application\" runs `npm run dev` on port 5000 (webview)\n- **Dev Server**: Vite configured with `allowedHosts: true` for Replit proxy compatibility\n- **Host Configuration**: Server binds to 0.0.0.0:5000 to accept Replit proxy connections\n- **Storage**: Currently using in-memory storage (MemStorage) - can be switched to PostgreSQL when needed\n- **Deployment**: Configured for autoscale deployment with build and start scripts\n\n## External Dependencies\n\n### UI and Styling\n- **shadcn/ui**: Pre-built accessible components based on Radix UI\n- **Radix UI**: Unstyled, accessible UI primitives for complex components\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration\n- **Lucide React**: Icon library providing consistent iconography\n- **class-variance-authority**: Type-safe CSS class generation for component variants\n\n### Data and State Management\n- **TanStack Query**: Server state management with caching, background updates, and optimistic updates\n- **React Hook Form**: Performant form library with minimal re-renders\n- **Zod**: TypeScript-first schema validation for forms and API data\n- **date-fns**: Modern date utility library for formatting and manipulation\n\n### Backend Infrastructure\n- **Drizzle ORM**: Lightweight TypeScript ORM with excellent PostgreSQL support\n- **Neon Database**: Serverless PostgreSQL with connection pooling and scaling\n- **Express.js**: Minimal web framework for API routes and middleware\n- **connect-pg-simple**: PostgreSQL session store for Express sessions\n\n### Development Tools\n- **Vite**: Fast build tool with plugins for React and development features\n- **TypeScript**: Static type checking across the entire application\n- **ESBuild**: Fast JavaScript bundler used by Vite for production builds\n- **Replit Integration**: Development environment optimizations for Replit hosting\n\n### Authentication & Security\n- **Session Management**: Express sessions with PostgreSQL storage\n- **CORS**: Configured for secure cross-origin requests\n- **Input Validation**: Zod schemas prevent malformed data from reaching the database\n\nThe architecture emphasizes developer experience, type safety, and maintainability while providing a solid foundation for a content-rich educational website. The modular design allows for easy feature additions and modifications as the college's needs evolve.","size_bytes":5823},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2755},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    log(`Error ${status}: ${message}`, \"error\");\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2100},"server/routes.ts":{"content":"import type { Express, Request, Response, NextFunction } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { registerUserSchema, loginUserSchema, insertNoticeSchema, insertEventSchema, insertNewsSchema, insertDepartmentSchema, insertCourseSchema, insertFacultySchema, insertFacilitySchema, insertGalleryImageSchema, type User } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport bcrypt from \"bcryptjs\";\nimport session from \"express-session\";\nimport MemoryStore from \"memorystore\";\n\nconst MemoryStoreSession = MemoryStore(session);\n\n// Extend Express Request to include session user\ndeclare module 'express-session' {\n  interface SessionData {\n    userId?: string;\n  }\n}\n\n// Authentication middleware\nfunction requireAuth(req: Request, res: Response, next: NextFunction) {\n  if (!req.session.userId) {\n    return res.status(401).json({ message: \"Authentication required\" });\n  }\n  next();\n}\n\nfunction requireRole(...roles: string[]) {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    if (!req.session.userId) {\n      return res.status(401).json({ message: \"Authentication required\" });\n    }\n    \n    const user = await storage.getUser(req.session.userId);\n    if (!user || !roles.includes(user.role)) {\n      return res.status(403).json({ message: \"Insufficient permissions\" });\n    }\n    \n    next();\n  };\n}\n\nfunction requireApproved(req: Request, res: Response, next: NextFunction) {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    if (!req.session.userId) {\n      return res.status(401).json({ message: \"Authentication required\" });\n    }\n    \n    const user = await storage.getUser(req.session.userId);\n    if (!user || user.approvalStatus !== \"approved\") {\n      return res.status(403).json({ message: \"Account not yet approved\" });\n    }\n    \n    next();\n  };\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Session middleware\n  app.use(\n    session({\n      secret: process.env.SESSION_SECRET || \"ramanujan-college-secret-key-2024\",\n      resave: false,\n      saveUninitialized: false,\n      store: new MemoryStoreSession({\n        checkPeriod: 86400000, // 24 hours\n      }),\n      cookie: {\n        maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n        httpOnly: true,\n        secure: process.env.NODE_ENV === \"production\",\n      },\n    })\n  );\n\n  // Authentication routes\n  app.post(\"/api/auth/register\", async (req, res) => {\n    try {\n      const validatedData = registerUserSchema.parse(req.body);\n      \n      // Check if username or email already exists\n      const existingUser = await storage.getUserByUsername(validatedData.username);\n      const existingEmail = await storage.getUserByEmail(validatedData.email);\n      \n      if (existingUser) {\n        return res.status(400).json({ message: \"Username already exists\" });\n      }\n      \n      if (existingEmail) {\n        return res.status(400).json({ message: \"Email already exists\" });\n      }\n      \n      // Hash password\n      const hashedPassword = await bcrypt.hash(validatedData.password, 10);\n      \n      // Create user\n      const user = await storage.createUser({\n        ...validatedData,\n        password: hashedPassword,\n      });\n      \n      // Remove password from response\n      const { password, ...userWithoutPassword } = user;\n      \n      res.status(201).json({ \n        message: \"Registration successful. Please wait for admin approval.\",\n        user: userWithoutPassword \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to register user\" });\n    }\n  });\n\n  app.post(\"/api/auth/login\", async (req, res) => {\n    try {\n      const validatedData = loginUserSchema.parse(req.body);\n      \n      const user = await storage.getUserByUsername(validatedData.username);\n      \n      if (!user) {\n        return res.status(401).json({ message: \"Invalid credentials\" });\n      }\n      \n      const isPasswordValid = await bcrypt.compare(validatedData.password, user.password);\n      \n      if (!isPasswordValid) {\n        return res.status(401).json({ message: \"Invalid credentials\" });\n      }\n      \n      if (user.approvalStatus !== \"approved\") {\n        return res.status(403).json({ message: \"Account not yet approved. Please wait for admin approval.\" });\n      }\n      \n      // Set session\n      req.session.userId = user.id;\n      \n      // Remove password from response\n      const { password, ...userWithoutPassword } = user;\n      \n      res.json({ message: \"Login successful\", user: userWithoutPassword });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to login\" });\n    }\n  });\n\n  app.post(\"/api/auth/logout\", requireAuth, (req, res) => {\n    req.session.destroy((err) => {\n      if (err) {\n        return res.status(500).json({ message: \"Failed to logout\" });\n      }\n      res.json({ message: \"Logout successful\" });\n    });\n  });\n\n  app.get(\"/api/auth/me\", requireAuth, async (req, res) => {\n    try {\n      const user = await storage.getUser(req.session.userId!);\n      \n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      \n      const { password, ...userWithoutPassword } = user;\n      res.json(userWithoutPassword);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // User management routes (admin only)\n  app.get(\"/api/users/pending\", requireRole(\"admin\", \"management\"), async (req, res) => {\n    try {\n      const users = await storage.getPendingUsers();\n      const usersWithoutPasswords = users.map(({ password, ...user }) => user);\n      res.json(usersWithoutPasswords);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch pending users\" });\n    }\n  });\n\n  app.patch(\"/api/users/:id/approval\", requireRole(\"admin\", \"management\"), async (req, res) => {\n    try {\n      const { status } = req.body;\n      \n      if (![\"approved\", \"rejected\"].includes(status)) {\n        return res.status(400).json({ message: \"Invalid status\" });\n      }\n      \n      const user = await storage.updateUserApprovalStatus(req.params.id, status);\n      \n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      \n      const { password, ...userWithoutPassword } = user;\n      res.json(userWithoutPassword);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to update user approval status\" });\n    }\n  });\n\n  // Notice routes\n  app.get(\"/api/notices\", async (req, res) => {\n    try {\n      const notices = await storage.getNotices();\n      res.json(notices);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch notices\" });\n    }\n  });\n\n  app.get(\"/api/notices/:id\", async (req, res) => {\n    try {\n      const notice = await storage.getNotice(req.params.id);\n      if (!notice) {\n        return res.status(404).json({ message: \"Notice not found\" });\n      }\n      res.json(notice);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch notice\" });\n    }\n  });\n\n  app.post(\"/api/notices\", requireRole(\"management\", \"admin\"), async (req, res) => {\n    try {\n      const validatedData = insertNoticeSchema.parse(req.body);\n      const notice = await storage.createNotice(validatedData);\n      res.status(201).json(notice);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create notice\" });\n    }\n  });\n\n  // Event routes\n  app.get(\"/api/events\", async (req, res) => {\n    try {\n      const events = await storage.getEvents();\n      res.json(events);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch events\" });\n    }\n  });\n\n  app.get(\"/api/events/:id\", async (req, res) => {\n    try {\n      const event = await storage.getEvent(req.params.id);\n      if (!event) {\n        return res.status(404).json({ message: \"Event not found\" });\n      }\n      res.json(event);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch event\" });\n    }\n  });\n\n  app.post(\"/api/events\", requireRole(\"management\", \"admin\"), async (req, res) => {\n    try {\n      const validatedData = insertEventSchema.parse(req.body);\n      const event = await storage.createEvent(validatedData);\n      res.status(201).json(event);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create event\" });\n    }\n  });\n\n  // News routes\n  app.get(\"/api/news\", async (req, res) => {\n    try {\n      const news = await storage.getNews();\n      res.json(news);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch news\" });\n    }\n  });\n\n  app.get(\"/api/news/featured\", async (req, res) => {\n    try {\n      const news = await storage.getFeaturedNews();\n      res.json(news);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured news\" });\n    }\n  });\n\n  app.get(\"/api/news/:id\", async (req, res) => {\n    try {\n      const newsItem = await storage.getNewsItem(req.params.id);\n      if (!newsItem) {\n        return res.status(404).json({ message: \"News item not found\" });\n      }\n      res.json(newsItem);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch news item\" });\n    }\n  });\n\n  app.post(\"/api/news\", async (req, res) => {\n    try {\n      const validatedData = insertNewsSchema.parse(req.body);\n      const newsItem = await storage.createNews(validatedData);\n      res.status(201).json(newsItem);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create news item\" });\n    }\n  });\n\n  // Department routes\n  app.get(\"/api/departments\", async (req, res) => {\n    try {\n      const departments = await storage.getDepartments();\n      res.json(departments);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch departments\" });\n    }\n  });\n\n  app.get(\"/api/departments/:id\", async (req, res) => {\n    try {\n      const department = await storage.getDepartment(req.params.id);\n      if (!department) {\n        return res.status(404).json({ message: \"Department not found\" });\n      }\n      res.json(department);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch department\" });\n    }\n  });\n\n  app.post(\"/api/departments\", async (req, res) => {\n    try {\n      const validatedData = insertDepartmentSchema.parse(req.body);\n      const department = await storage.createDepartment(validatedData);\n      res.status(201).json(department);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create department\" });\n    }\n  });\n\n  // Course routes\n  app.get(\"/api/courses\", async (req, res) => {\n    try {\n      const { departmentId } = req.query;\n      let courses;\n      if (departmentId && typeof departmentId === 'string') {\n        courses = await storage.getCoursesByDepartment(departmentId);\n      } else {\n        courses = await storage.getCourses();\n      }\n      res.json(courses);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch courses\" });\n    }\n  });\n\n  app.get(\"/api/courses/:id\", async (req, res) => {\n    try {\n      const course = await storage.getCourse(req.params.id);\n      if (!course) {\n        return res.status(404).json({ message: \"Course not found\" });\n      }\n      res.json(course);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch course\" });\n    }\n  });\n\n  app.post(\"/api/courses\", async (req, res) => {\n    try {\n      const validatedData = insertCourseSchema.parse(req.body);\n      const course = await storage.createCourse(validatedData);\n      res.status(201).json(course);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create course\" });\n    }\n  });\n\n  // Faculty routes\n  app.get(\"/api/faculty\", async (req, res) => {\n    try {\n      const { departmentId } = req.query;\n      let faculty;\n      if (departmentId && typeof departmentId === 'string') {\n        faculty = await storage.getFacultyByDepartment(departmentId);\n      } else {\n        faculty = await storage.getFaculty();\n      }\n      res.json(faculty);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch faculty\" });\n    }\n  });\n\n  app.get(\"/api/faculty/:id\", async (req, res) => {\n    try {\n      const facultyMember = await storage.getFacultyMember(req.params.id);\n      if (!facultyMember) {\n        return res.status(404).json({ message: \"Faculty member not found\" });\n      }\n      res.json(facultyMember);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch faculty member\" });\n    }\n  });\n\n  app.post(\"/api/faculty\", async (req, res) => {\n    try {\n      const validatedData = insertFacultySchema.parse(req.body);\n      const facultyMember = await storage.createFaculty(validatedData);\n      res.status(201).json(facultyMember);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create faculty member\" });\n    }\n  });\n\n  // Facility routes\n  app.get(\"/api/facilities\", async (req, res) => {\n    try {\n      const { category } = req.query;\n      let facilities;\n      if (category && typeof category === 'string') {\n        facilities = await storage.getFacilitiesByCategory(category);\n      } else {\n        facilities = await storage.getFacilities();\n      }\n      res.json(facilities);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch facilities\" });\n    }\n  });\n\n  app.get(\"/api/facilities/:id\", async (req, res) => {\n    try {\n      const facility = await storage.getFacility(req.params.id);\n      if (!facility) {\n        return res.status(404).json({ message: \"Facility not found\" });\n      }\n      res.json(facility);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch facility\" });\n    }\n  });\n\n  app.post(\"/api/facilities\", async (req, res) => {\n    try {\n      const validatedData = insertFacilitySchema.parse(req.body);\n      const facility = await storage.createFacility(validatedData);\n      res.status(201).json(facility);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create facility\" });\n    }\n  });\n\n  // Gallery Image routes\n  app.get(\"/api/gallery\", async (req, res) => {\n    try {\n      const images = await storage.getGalleryImages();\n      res.json(images);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch gallery images\" });\n    }\n  });\n\n  app.get(\"/api/gallery/:id\", async (req, res) => {\n    try {\n      const image = await storage.getGalleryImage(req.params.id);\n      if (!image) {\n        return res.status(404).json({ message: \"Gallery image not found\" });\n      }\n      res.json(image);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch gallery image\" });\n    }\n  });\n\n  app.post(\"/api/gallery\", requireRole(\"admin\", \"management\"), async (req, res) => {\n    try {\n      const validatedData = insertGalleryImageSchema.parse(req.body);\n      const image = await storage.createGalleryImage(validatedData);\n      res.status(201).json(image);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create gallery image\" });\n    }\n  });\n\n  app.delete(\"/api/gallery/:id\", requireRole(\"admin\", \"management\"), async (req, res) => {\n    try {\n      const success = await storage.deleteGalleryImage(req.params.id);\n      if (!success) {\n        return res.status(404).json({ message: \"Gallery image not found\" });\n      }\n      res.json({ message: \"Gallery image deleted successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete gallery image\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":16994},"server/storage.ts":{"content":"import { type User, type InsertUser, type Notice, type InsertNotice, type Event, type InsertEvent, type News, type InsertNews, type Department, type InsertDepartment, type Course, type InsertCourse, type Faculty, type InsertFaculty, type Facility, type InsertFacility, type GalleryImage, type InsertGalleryImage } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUserApprovalStatus(id: string, status: string): Promise<User | undefined>;\n  getPendingUsers(): Promise<User[]>;\n  getUsersByRole(role: string): Promise<User[]>;\n  \n  // Notice methods\n  getNotices(): Promise<Notice[]>;\n  getNotice(id: string): Promise<Notice | undefined>;\n  createNotice(notice: InsertNotice): Promise<Notice>;\n  \n  // Event methods\n  getEvents(): Promise<Event[]>;\n  getEvent(id: string): Promise<Event | undefined>;\n  createEvent(event: InsertEvent): Promise<Event>;\n  \n  // News methods\n  getNews(): Promise<News[]>;\n  getNewsItem(id: string): Promise<News | undefined>;\n  getFeaturedNews(): Promise<News[]>;\n  createNews(news: InsertNews): Promise<News>;\n  \n  // Department methods\n  getDepartments(): Promise<Department[]>;\n  getDepartment(id: string): Promise<Department | undefined>;\n  createDepartment(department: InsertDepartment): Promise<Department>;\n  \n  // Course methods\n  getCourses(): Promise<Course[]>;\n  getCourse(id: string): Promise<Course | undefined>;\n  getCoursesByDepartment(departmentId: string): Promise<Course[]>;\n  createCourse(course: InsertCourse): Promise<Course>;\n  \n  // Faculty methods\n  getFaculty(): Promise<Faculty[]>;\n  getFacultyMember(id: string): Promise<Faculty | undefined>;\n  getFacultyByDepartment(departmentId: string): Promise<Faculty[]>;\n  createFaculty(faculty: InsertFaculty): Promise<Faculty>;\n  \n  // Facility methods\n  getFacilities(): Promise<Facility[]>;\n  getFacility(id: string): Promise<Facility | undefined>;\n  getFacilitiesByCategory(category: string): Promise<Facility[]>;\n  createFacility(facility: InsertFacility): Promise<Facility>;\n  \n  // Gallery Image methods\n  getGalleryImages(): Promise<GalleryImage[]>;\n  getGalleryImage(id: string): Promise<GalleryImage | undefined>;\n  createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage>;\n  deleteGalleryImage(id: string): Promise<boolean>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private notices: Map<string, Notice>;\n  private events: Map<string, Event>;\n  private news: Map<string, News>;\n  private departments: Map<string, Department>;\n  private courses: Map<string, Course>;\n  private faculty: Map<string, Faculty>;\n  private facilities: Map<string, Facility>;\n  private galleryImages: Map<string, GalleryImage>;\n\n  constructor() {\n    this.users = new Map();\n    this.notices = new Map();\n    this.events = new Map();\n    this.news = new Map();\n    this.departments = new Map();\n    this.courses = new Map();\n    this.faculty = new Map();\n    this.facilities = new Map();\n    this.galleryImages = new Map();\n    \n    // Initialize with some basic data structure\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize empty collections - no mock data\n    // Real data would be populated through API endpoints or database migrations\n  }\n\n  // User methods\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.email === email,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { \n      ...insertUser, \n      id,\n      role: insertUser.role || \"student\",\n      approvalStatus: \"pending\",\n      createdAt: new Date()\n    };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async updateUserApprovalStatus(id: string, status: string): Promise<User | undefined> {\n    const user = this.users.get(id);\n    if (!user) return undefined;\n    \n    const updatedUser: User = { ...user, approvalStatus: status };\n    this.users.set(id, updatedUser);\n    return updatedUser;\n  }\n\n  async getPendingUsers(): Promise<User[]> {\n    return Array.from(this.users.values())\n      .filter(user => user.approvalStatus === \"pending\")\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0));\n  }\n\n  async getUsersByRole(role: string): Promise<User[]> {\n    return Array.from(this.users.values())\n      .filter(user => user.role === role);\n  }\n\n  // Notice methods\n  async getNotices(): Promise<Notice[]> {\n    return Array.from(this.notices.values())\n      .filter(notice => notice.isActive)\n      .sort((a, b) => new Date(b.publishedAt!).getTime() - new Date(a.publishedAt!).getTime());\n  }\n\n  async getNotice(id: string): Promise<Notice | undefined> {\n    return this.notices.get(id);\n  }\n\n  async createNotice(insertNotice: InsertNotice): Promise<Notice> {\n    const id = randomUUID();\n    const notice: Notice = {\n      ...insertNotice,\n      id,\n      publishedAt: new Date(),\n      priority: insertNotice.priority || \"normal\",\n      isActive: insertNotice.isActive !== undefined ? insertNotice.isActive : true\n    };\n    this.notices.set(id, notice);\n    return notice;\n  }\n\n  // Event methods\n  async getEvents(): Promise<Event[]> {\n    return Array.from(this.events.values())\n      .filter(event => event.isActive)\n      .sort((a, b) => new Date(a.eventDate).getTime() - new Date(b.eventDate).getTime());\n  }\n\n  async getEvent(id: string): Promise<Event | undefined> {\n    return this.events.get(id);\n  }\n\n  async createEvent(insertEvent: InsertEvent): Promise<Event> {\n    const id = randomUUID();\n    const event: Event = {\n      ...insertEvent,\n      id,\n      isActive: insertEvent.isActive !== undefined ? insertEvent.isActive : true\n    };\n    this.events.set(id, event);\n    return event;\n  }\n\n  // News methods\n  async getNews(): Promise<News[]> {\n    return Array.from(this.news.values())\n      .filter(newsItem => newsItem.isActive)\n      .sort((a, b) => new Date(b.publishedAt!).getTime() - new Date(a.publishedAt!).getTime());\n  }\n\n  async getNewsItem(id: string): Promise<News | undefined> {\n    return this.news.get(id);\n  }\n\n  async getFeaturedNews(): Promise<News[]> {\n    return Array.from(this.news.values())\n      .filter(newsItem => newsItem.isActive && newsItem.featured)\n      .sort((a, b) => new Date(b.publishedAt!).getTime() - new Date(a.publishedAt!).getTime());\n  }\n\n  async createNews(insertNews: InsertNews): Promise<News> {\n    const id = randomUUID();\n    const newsItem: News = {\n      ...insertNews,\n      id,\n      publishedAt: new Date(),\n      featured: insertNews.featured || false,\n      imageUrl: insertNews.imageUrl || null,\n      isActive: insertNews.isActive !== undefined ? insertNews.isActive : true\n    };\n    this.news.set(id, newsItem);\n    return newsItem;\n  }\n\n  // Department methods\n  async getDepartments(): Promise<Department[]> {\n    return Array.from(this.departments.values())\n      .filter(dept => dept.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async getDepartment(id: string): Promise<Department | undefined> {\n    return this.departments.get(id);\n  }\n\n  async createDepartment(insertDepartment: InsertDepartment): Promise<Department> {\n    const id = randomUUID();\n    const department: Department = {\n      ...insertDepartment,\n      id,\n      established: insertDepartment.established || null,\n      headOfDepartment: insertDepartment.headOfDepartment || null,\n      facultyCount: insertDepartment.facultyCount || 0,\n      programs: insertDepartment.programs || [],\n      facilities: insertDepartment.facilities || [],\n      isActive: insertDepartment.isActive !== undefined ? insertDepartment.isActive : true\n    };\n    this.departments.set(id, department);\n    return department;\n  }\n\n  // Course methods\n  async getCourses(): Promise<Course[]> {\n    return Array.from(this.courses.values())\n      .filter(course => course.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async getCourse(id: string): Promise<Course | undefined> {\n    return this.courses.get(id);\n  }\n\n  async getCoursesByDepartment(departmentId: string): Promise<Course[]> {\n    return Array.from(this.courses.values())\n      .filter(course => course.departmentId === departmentId && course.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async createCourse(insertCourse: InsertCourse): Promise<Course> {\n    const id = randomUUID();\n    const course: Course = {\n      ...insertCourse,\n      id,\n      departmentId: insertCourse.departmentId || null,\n      seats: insertCourse.seats || null,\n      fees: insertCourse.fees || null,\n      syllabus: insertCourse.syllabus || null,\n      isActive: insertCourse.isActive !== undefined ? insertCourse.isActive : true\n    };\n    this.courses.set(id, course);\n    return course;\n  }\n\n  // Faculty methods\n  async getFaculty(): Promise<Faculty[]> {\n    return Array.from(this.faculty.values())\n      .filter(member => member.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async getFacultyMember(id: string): Promise<Faculty | undefined> {\n    return this.faculty.get(id);\n  }\n\n  async getFacultyByDepartment(departmentId: string): Promise<Faculty[]> {\n    return Array.from(this.faculty.values())\n      .filter(member => member.departmentId === departmentId && member.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async createFaculty(insertFaculty: InsertFaculty): Promise<Faculty> {\n    const id = randomUUID();\n    const facultyMember: Faculty = {\n      ...insertFaculty,\n      id,\n      departmentId: insertFaculty.departmentId || null,\n      experience: insertFaculty.experience || null,\n      specialization: insertFaculty.specialization || null,\n      email: insertFaculty.email || null,\n      phone: insertFaculty.phone || null,\n      isActive: insertFaculty.isActive !== undefined ? insertFaculty.isActive : true\n    };\n    this.faculty.set(id, facultyMember);\n    return facultyMember;\n  }\n\n  // Facility methods\n  async getFacilities(): Promise<Facility[]> {\n    return Array.from(this.facilities.values())\n      .filter(facility => facility.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async getFacility(id: string): Promise<Facility | undefined> {\n    return this.facilities.get(id);\n  }\n\n  async getFacilitiesByCategory(category: string): Promise<Facility[]> {\n    return Array.from(this.facilities.values())\n      .filter(facility => facility.category === category && facility.isActive)\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async createFacility(insertFacility: InsertFacility): Promise<Facility> {\n    const id = randomUUID();\n    const facility: Facility = {\n      ...insertFacility,\n      id,\n      capacity: insertFacility.capacity || null,\n      features: insertFacility.features || [],\n      imageUrl: insertFacility.imageUrl || null,\n      isActive: insertFacility.isActive !== undefined ? insertFacility.isActive : true\n    };\n    this.facilities.set(id, facility);\n    return facility;\n  }\n\n  // Gallery Image methods\n  async getGalleryImages(): Promise<GalleryImage[]> {\n    return Array.from(this.galleryImages.values())\n      .filter(image => image.isActive)\n      .sort((a, b) => (a.order || 0) - (b.order || 0));\n  }\n\n  async getGalleryImage(id: string): Promise<GalleryImage | undefined> {\n    return this.galleryImages.get(id);\n  }\n\n  async createGalleryImage(insertImage: InsertGalleryImage): Promise<GalleryImage> {\n    const id = randomUUID();\n    const image: GalleryImage = {\n      ...insertImage,\n      id,\n      caption: insertImage.caption || null,\n      order: insertImage.order || 0,\n      isActive: insertImage.isActive !== undefined ? insertImage.isActive : true,\n      createdAt: new Date()\n    };\n    this.galleryImages.set(id, image);\n    return image;\n  }\n\n  async deleteGalleryImage(id: string): Promise<boolean> {\n    return this.galleryImages.delete(id);\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":12504},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  fullName: text(\"full_name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  role: text(\"role\").notNull().default(\"student\"),\n  approvalStatus: text(\"approval_status\").notNull().default(\"pending\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const notices = pgTable(\"notices\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  category: text(\"category\").notNull(),\n  publishedAt: timestamp(\"published_at\").defaultNow(),\n  priority: text(\"priority\").default(\"normal\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const events = pgTable(\"events\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  eventDate: timestamp(\"event_date\").notNull(),\n  location: text(\"location\").notNull(),\n  category: text(\"category\").notNull(),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const news = pgTable(\"news\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  excerpt: text(\"excerpt\").notNull(),\n  author: text(\"author\").notNull(),\n  publishedAt: timestamp(\"published_at\").defaultNow(),\n  category: text(\"category\").notNull(),\n  featured: boolean(\"featured\").default(false),\n  imageUrl: text(\"image_url\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const departments = pgTable(\"departments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  established: integer(\"established\"),\n  headOfDepartment: text(\"head_of_department\"),\n  facultyCount: integer(\"faculty_count\").default(0),\n  programs: text(\"programs\").array(),\n  facilities: text(\"facilities\").array(),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const courses = pgTable(\"courses\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  code: text(\"code\").notNull().unique(),\n  departmentId: varchar(\"department_id\").references(() => departments.id),\n  description: text(\"description\").notNull(),\n  duration: text(\"duration\").notNull(),\n  eligibility: text(\"eligibility\").notNull(),\n  seats: integer(\"seats\"),\n  fees: text(\"fees\"),\n  syllabus: text(\"syllabus\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const faculty = pgTable(\"faculty\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  designation: text(\"designation\").notNull(),\n  departmentId: varchar(\"department_id\").references(() => departments.id),\n  qualification: text(\"qualification\").notNull(),\n  experience: integer(\"experience\"),\n  specialization: text(\"specialization\"),\n  email: text(\"email\"),\n  phone: text(\"phone\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const facilities = pgTable(\"facilities\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  category: text(\"category\").notNull(),\n  capacity: integer(\"capacity\"),\n  features: text(\"features\").array(),\n  imageUrl: text(\"image_url\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const galleryImages = pgTable(\"gallery_images\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  imageUrl: text(\"image_url\").notNull(),\n  caption: text(\"caption\"),\n  order: integer(\"order\").default(0),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n  approvalStatus: true,\n});\n\nexport const registerUserSchema = insertUserSchema.extend({\n  role: z.enum([\"student\", \"teacher\", \"admin\", \"management\"]),\n});\n\nexport const loginUserSchema = z.object({\n  username: z.string().min(1),\n  password: z.string().min(1),\n});\n\nexport const insertNoticeSchema = createInsertSchema(notices).omit({\n  id: true,\n  publishedAt: true,\n});\n\nexport const insertEventSchema = createInsertSchema(events).omit({\n  id: true,\n});\n\nexport const insertNewsSchema = createInsertSchema(news).omit({\n  id: true,\n  publishedAt: true,\n});\n\nexport const insertDepartmentSchema = createInsertSchema(departments).omit({\n  id: true,\n});\n\nexport const insertCourseSchema = createInsertSchema(courses).omit({\n  id: true,\n});\n\nexport const insertFacultySchema = createInsertSchema(faculty).omit({\n  id: true,\n});\n\nexport const insertFacilitySchema = createInsertSchema(facilities).omit({\n  id: true,\n});\n\nexport const insertGalleryImageSchema = createInsertSchema(galleryImages).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type RegisterUser = z.infer<typeof registerUserSchema>;\nexport type LoginUser = z.infer<typeof loginUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertNotice = z.infer<typeof insertNoticeSchema>;\nexport type Notice = typeof notices.$inferSelect;\nexport type InsertEvent = z.infer<typeof insertEventSchema>;\nexport type Event = typeof events.$inferSelect;\nexport type InsertNews = z.infer<typeof insertNewsSchema>;\nexport type News = typeof news.$inferSelect;\nexport type InsertDepartment = z.infer<typeof insertDepartmentSchema>;\nexport type Department = typeof departments.$inferSelect;\nexport type InsertCourse = z.infer<typeof insertCourseSchema>;\nexport type Course = typeof courses.$inferSelect;\nexport type InsertFaculty = z.infer<typeof insertFacultySchema>;\nexport type Faculty = typeof faculty.$inferSelect;\nexport type InsertFacility = z.infer<typeof insertFacilitySchema>;\nexport type Facility = typeof facilities.$inferSelect;\nexport type InsertGalleryImage = z.infer<typeof insertGalleryImageSchema>;\nexport type GalleryImage = typeof galleryImages.$inferSelect;\n","size_bytes":6416},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Header from \"@/components/header\";\nimport Footer from \"@/components/footer\";\nimport ScrollToTop from \"@/components/scroll-to-top\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Academics from \"@/pages/academics\";\nimport Admissions from \"@/pages/admissions\";\nimport Students from \"@/pages/students\";\nimport Research from \"@/pages/research\";\nimport News from \"@/pages/news\";\nimport Contact from \"@/pages/contact\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/academics\" component={Academics} />\n          <Route path=\"/admissions\" component={Admissions} />\n          <Route path=\"/students\" component={Students} />\n          <Route path=\"/research\" component={Research} />\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n      <ScrollToTop />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1796},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(210, 40%, 98%);\n  --foreground: hsl(222.2, 84%, 4.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222.2, 84%, 4.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222.2, 84%, 4.9%);\n  --primary: hsl(221.2, 83.2%, 53.3%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(210, 40%, 96%);\n  --secondary-foreground: hsl(222.2, 84%, 4.9%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(215.4, 16.3%, 46.9%);\n  --accent: hsl(43.3, 96.4%, 56.3%);\n  --accent-foreground: hsl(222.2, 84%, 4.9%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(214.3, 31.8%, 91.4%);\n  --input: hsl(214.3, 31.8%, 91.4%);\n  --ring: hsl(221.2, 83.2%, 53.3%);\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --sidebar: hsl(210, 40%, 96%);\n  --sidebar-foreground: hsl(222.2, 84%, 4.9%);\n  --sidebar-primary: hsl(221.2, 83.2%, 53.3%);\n  --sidebar-primary-foreground: hsl(210, 40%, 98%);\n  --sidebar-accent: hsl(43.3, 96.4%, 56.3%);\n  --sidebar-accent-foreground: hsl(222.2, 84%, 4.9%);\n  --sidebar-border: hsl(214.3, 31.8%, 91.4%);\n  --sidebar-ring: hsl(221.2, 83.2%, 53.3%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: 'Playfair Display', serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --radius: 0.75rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00), 0px 1px 2px -1px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00), 0px 1px 2px -1px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00), 0px 2px 4px -1px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00), 0px 4px 6px -1px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00), 0px 8px 10px -1px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(221.2, 83.2%, 53.3%, 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(222.2, 84%, 4.9%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222.2, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222.2, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(210, 40%, 98%);\n  --primary-foreground: hsl(222.2, 84%, 4.9%);\n  --secondary: hsl(217.2, 32.6%, 17.5%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217.2, 32.6%, 17.5%);\n  --muted-foreground: hsl(215, 20.2%, 65.1%);\n  --accent: hsl(217.2, 32.6%, 17.5%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217.2, 32.6%, 17.5%);\n  --input: hsl(217.2, 32.6%, 17.5%);\n  --ring: hsl(212.7, 26.8%, 83.9%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply font-sans antialiased bg-background text-foreground scroll-smooth;\n  }\n}\n\n.hero-bg {\n  background: linear-gradient(135deg, var(--primary) 0%, hsl(221.2, 83.2%, 45%) 100%);\n}\n\n.glass-effect {\n  backdrop-filter: blur(10px);\n  background: rgba(255, 255, 255, 0.1);\n}\n","size_bytes":3557},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Facebook, Twitter, Instagram, Youtube, MapPin, Phone, Mail, Clock } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-foreground text-background py-16\">\n      <div className=\"container mx-auto px-4\">\n        {/* Contact Information */}\n        <div className=\"grid lg:grid-cols-4 gap-8 mb-12\">\n          {/* College Info */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center text-primary-foreground font-bold text-xl\">\n                RC\n              </div>\n              <div>\n                <h3 className=\"text-xl font-bold\">Ramanujan College</h3>\n                <p className=\"text-sm opacity-80\">University of Delhi</p>\n              </div>\n            </div>\n            <p className=\"text-sm opacity-80 mb-6 max-w-md\">\n              A premier institution committed to academic excellence, holistic development, and \n              building a better world through education and innovation.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center hover:bg-primary/80 transition-colors\"\n                data-testid=\"social-facebook\"\n                aria-label=\"Facebook\"\n              >\n                <Facebook className=\"w-5 h-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center hover:bg-primary/80 transition-colors\"\n                data-testid=\"social-twitter\"\n                aria-label=\"Twitter\"\n              >\n                <Twitter className=\"w-5 h-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center hover:bg-primary/80 transition-colors\"\n                data-testid=\"social-instagram\"\n                aria-label=\"Instagram\"\n              >\n                <Instagram className=\"w-5 h-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center hover:bg-primary/80 transition-colors\"\n                data-testid=\"social-youtube\"\n                aria-label=\"YouTube\"\n              >\n                <Youtube className=\"w-5 h-5\" />\n              </a>\n            </div>\n          </div>\n\n          {/* Contact Details */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Contact Information</h4>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-start space-x-3\" data-testid=\"contact-address\">\n                <MapPin className=\"w-5 h-5 mt-1 text-primary flex-shrink-0\" />\n                <div className=\"text-sm\">\n                  <div className=\"font-medium\">Address</div>\n                  <div className=\"opacity-80\">Kalkaji, New Delhi - 110019</div>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\" data-testid=\"contact-phone\">\n                <Phone className=\"w-5 h-5 mt-1 text-primary flex-shrink-0\" />\n                <div className=\"text-sm\">\n                  <div className=\"font-medium\">Phone</div>\n                  <div className=\"opacity-80\">+91-11-26430047</div>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\" data-testid=\"contact-email\">\n                <Mail className=\"w-5 h-5 mt-1 text-primary flex-shrink-0\" />\n                <div className=\"text-sm\">\n                  <div className=\"font-medium\">Email</div>\n                  <div className=\"opacity-80\">info@ramanujancollege.ac.in</div>\n                </div>\n              </div>\n              <div className=\"flex items-start space-x-3\" data-testid=\"contact-hours\">\n                <Clock className=\"w-5 h-5 mt-1 text-primary flex-shrink-0\" />\n                <div className=\"text-sm\">\n                  <div className=\"font-medium\">Office Hours</div>\n                  <div className=\"opacity-80\">Mon-Fri: 9:00 AM - 5:00 PM</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Quick Links</h4>\n            <div className=\"space-y-2\">\n              <Link \n                href=\"/admissions\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-admissions\"\n              >\n                Admissions\n              </Link>\n              <Link \n                href=\"/academics#calendar\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-calendar\"\n              >\n                Academic Calendar\n              </Link>\n              <Link \n                href=\"/students#timetables\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-timetables\"\n              >\n                Time Tables\n              </Link>\n              <Link \n                href=\"/students#library\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-library\"\n              >\n                Library\n              </Link>\n              <a \n                href=\"#\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-alumni\"\n              >\n                Alumni\n              </a>\n              <a \n                href=\"#\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-anti-ragging\"\n              >\n                Anti-Ragging\n              </a>\n              <a \n                href=\"#\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-rti\"\n              >\n                RTI\n              </a>\n              <a \n                href=\"#\" \n                className=\"block text-sm opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-link-tenders\"\n              >\n                Tenders\n              </a>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-gray-600 pt-8\">\n          <div className=\"flex flex-col lg:flex-row justify-between items-center space-y-4 lg:space-y-0\">\n            <div className=\"text-sm opacity-80\" data-testid=\"copyright\">\n              © 2024 Ramanujan College, University of Delhi. All rights reserved.\n            </div>\n            <div className=\"flex space-x-6 text-sm\">\n              <a \n                href=\"#\" \n                className=\"opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-privacy\"\n              >\n                Privacy Policy\n              </a>\n              <a \n                href=\"#\" \n                className=\"opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-terms\"\n              >\n                Terms of Service\n              </a>\n              <a \n                href=\"#\" \n                className=\"opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-accessibility\"\n              >\n                Accessibility\n              </a>\n              <a \n                href=\"#\" \n                className=\"opacity-80 hover:opacity-100 hover:text-primary transition-colors\"\n                data-testid=\"footer-sitemap\"\n              >\n                Site Map\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":8269},"client/src/components/header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navigation = [\n    { name: \"Home\", href: \"/\" },\n    { \n      name: \"About\", \n      href: \"/about\",\n      subItems: [\n        { name: \"History\", href: \"/about#history\" },\n        { name: \"Vision & Mission\", href: \"/about#vision\" },\n        { name: \"Leadership\", href: \"/about#leadership\" },\n        { name: \"Governance\", href: \"/about#governance\" },\n      ]\n    },\n    { \n      name: \"Academics\", \n      href: \"/academics\",\n      subItems: [\n        { name: \"Departments\", href: \"/academics#departments\" },\n        { name: \"Courses\", href: \"/academics#courses\" },\n        { name: \"Faculty\", href: \"/academics#faculty\" },\n        { name: \"Academic Calendar\", href: \"/academics#calendar\" },\n      ]\n    },\n    { name: \"Admissions\", href: \"/admissions\" },\n    { name: \"Students\", href: \"/students\" },\n    { name: \"Research\", href: \"/research\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-card/95 backdrop-blur-sm border-b border-border\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo and College Name */}\n          <Link href=\"/\" data-testid=\"logo-link\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center text-primary-foreground font-bold text-lg\">\n                RC\n              </div>\n              <div>\n                <h1 className=\"text-lg font-bold text-foreground\">Ramanujan Junior College</h1>\n                <p className=\"text-xs text-muted-foreground\">Assam (AHSEC)</p>\n              </div>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <NavigationMenu className=\"hidden lg:flex\">\n            <NavigationMenuList>\n              {navigation.map((item) => (\n                <NavigationMenuItem key={item.name}>\n                  {item.subItems ? (\n                    <>\n                      <NavigationMenuTrigger \n                        className={cn(\n                          \"text-foreground hover:text-primary transition-colors\",\n                          location === item.href && \"text-primary\"\n                        )}\n                        data-testid={`nav-${item.name.toLowerCase()}`}\n                      >\n                        {item.name}\n                      </NavigationMenuTrigger>\n                      <NavigationMenuContent>\n                        <ul className=\"grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]\">\n                          {item.subItems.map((subItem) => (\n                            <li key={subItem.name}>\n                              <NavigationMenuLink asChild>\n                                <Link\n                                  href={subItem.href}\n                                  className={cn(\n                                    \"block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground\"\n                                  )}\n                                  data-testid={`nav-sub-${subItem.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                                >\n                                  <div className=\"text-sm font-medium leading-none\">{subItem.name}</div>\n                                </Link>\n                              </NavigationMenuLink>\n                            </li>\n                          ))}\n                        </ul>\n                      </NavigationMenuContent>\n                    </>\n                  ) : (\n                    <NavigationMenuLink asChild>\n                      <Link\n                        href={item.href}\n                        className={cn(\n                          \"group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\",\n                          location === item.href && \"text-primary bg-accent/50\"\n                        )}\n                        data-testid={`nav-${item.name.toLowerCase()}`}\n                      >\n                        {item.name}\n                      </Link>\n                    </NavigationMenuLink>\n                  )}\n                </NavigationMenuItem>\n              ))}\n            </NavigationMenuList>\n          </NavigationMenu>\n\n          {/* Mobile Menu Button */}\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden\" data-testid=\"mobile-menu-button\">\n                <Menu className=\"h-6 w-6\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n              <nav className=\"flex flex-col space-y-4 mt-8\" data-testid=\"mobile-nav\">\n                {navigation.map((item) => (\n                  <div key={item.name}>\n                    <Link\n                      href={item.href}\n                      className={cn(\n                        \"text-foreground hover:text-primary transition-colors py-2 text-lg font-medium\",\n                        location === item.href && \"text-primary\"\n                      )}\n                      onClick={() => {\n                        setTimeout(() => setIsOpen(false), 100);\n                      }}\n                      data-testid={`mobile-nav-${item.name.toLowerCase()}`}\n                    >\n                      {item.name}\n                    </Link>\n                    {item.subItems && (\n                      <div className=\"ml-4 mt-2 space-y-2\">\n                        {item.subItems.map((subItem) => (\n                          <Link\n                            key={subItem.name}\n                            href={subItem.href}\n                            className=\"block text-muted-foreground hover:text-primary transition-colors py-1\"\n                            onClick={() => {\n                        setTimeout(() => setIsOpen(false), 100);\n                      }}\n                            data-testid={`mobile-nav-sub-${subItem.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            {subItem.name}\n                          </Link>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </nav>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":7399},"client/src/components/hero-section.tsx":{"content":"import { User } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState } from \"react\";\nimport EventsCarousel from \"@/components/events-carousel\";\n\nexport default function HeroSection() {\n  const [showFullMessage, setShowFullMessage] = useState(false);\n\n  const fullMessage = `This prospectus is intended to give all the necessary information about our system of imparting excellent education to the sincere and devoted students wishing for a successful career and shine in today's competitive world. When a drop of water falls into a river, it has no identity, but when it falls on the leaf of a lotus, it shines like a pearl! So choose the best place where you can shine!\nOur teachers are dedicated, hardworking and sincere. They teach with such efficacy that the question of private tuitions doesnot arise.\nOur students qualify in Medical and Engineering entrance examinations including IIT, ISAT(2011) & PMT without private coaching. Our college class-room teaching is complete and conceptual thus private coaching is not required.The students who go for private tuitions are not at all welcome to our college because it is important to understand that tuitions will not solve the problems. It is merely a waste of self-study hours. Emotionally immature and socially handicapped students fail in life. I have tasted the bitterness of failure several times in my life and this has taught me the three 'D's which are essential for success- \"Desire, Dedication and Determination\". Imbibing these values in one's life will bear the sweet fruits of success. I want my students to be confident of their abilities, without any inferiority or superioty complex. There is no short cut to success- the sooner you learn this, the better. So I welcome all those students who are sincere, dedicated, respectful, hardwoking, self-reliant, social, obedient, punctual and cultured to \"Ramanujan Junior College\".\n\nIn every Academic Session coaching classes along with regular classes and entrance based tests are held every Saturday.\n\nPowerful tips to success in student life :\n1. Use a study table if possible. Avoid studying while lying on bed.\n2. Don't get up from your desk during the three hours of study session, not even for drinking water.\n3. Don't listen to music during studies.If you have the habit then gradually overcome it day by day. 4. No phone calls and no messaging during studies. Study with 100% concentration as if you are appearing in an examination.\n5. You need to scale up your efforts and set a target of 50-55 hours of study at home every week.\n6. Update your home work and assignments regularly. Wishing you success in your endeavour.\n7. Every student is a unique genius- including you. Discover your unique talent, abilities, interests and values. It is only you who can bring out the best in yourself.\n8. Nobody can play your role better than you.\n9. Manage your time in such a way that every second is being properly utilised and invest the maximum time you can in improving yourself. Remember that you get 86,400 seconds every day. Every second you waste is a second you will lose forever.\n10. Learn something new each day. Make sure that you understand everything that you study. Be observant.\n11. Look up the words that you do not understand. Do not leave it for later.\n12. Expect much more from yourself than what you expect from others.\n13. Help other people around you to the best of your ability and make friendship with those who support you in need.\n14. Be very self-confident, self-reliant, self-respecting and self-motivated.\n15. Remember one of the most important key to excellence is a positive mental attitude. Your positive work, action and thoughts magnetise an energy in you, to evolve you into a better being.\n16. Believe in yourself, believe in your dreams and your actions will create a reality for yourself.\nRequest to parents/guardians : :\n1. Criticism of a teacher or college by parents in the presence of the child is harmful.\n2. I request all the guardians not to lay stress on private tuition.`;\n\n  const previewMessage = `This prospectus is intended to give all the necessary information about our system of imparting excellent education to the sincere and devoted students wishing for a successful career and shine in today's competitive world...`;\n\n  return (\n    <section className=\"hero-bg text-white relative overflow-hidden\">\n      {/* Campus background image with overlay */}\n      <div className=\"absolute inset-0 bg-black/20\"></div>\n      \n      <div className=\"relative container mx-auto px-4 py-16\">\n        {/* Section 1: College Branding */}\n        <div className=\"max-w-4xl mx-auto text-center mb-16\">\n          <h1 className=\"text-5xl md:text-6xl font-bold mb-4 font-serif\" data-testid=\"college-name\">\n            Ramanujan Junior College\n          </h1>\n          <p className=\"text-xl md:text-2xl opacity-90\" data-testid=\"vision-statement\">\n            Education, Development and Progress\n          </p>\n        </div>\n\n        {/* Section 2: From Principal's Desk */}\n        <div className=\"max-w-4xl mx-auto bg-white/10 backdrop-blur-sm rounded-lg p-8 md:p-12\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-8 text-center font-serif\" data-testid=\"heading-principal-desk\">\n            From Principal's Desk\n          </h2>\n          \n          <div className=\"flex flex-col md:flex-row items-center md:items-start gap-8\">\n            {/* Principal's Image Placeholder */}\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-32 h-32 md:w-40 md:h-40 rounded-full bg-white/20 flex items-center justify-center border-4 border-white/30\" data-testid=\"img-principal\">\n                <User className=\"w-16 h-16 md:w-20 md:h-20 text-white/70\" />\n              </div>\n            </div>\n            \n            {/* Principal's Message */}\n            <div className=\"flex-1 text-center\">\n              <p className=\"text-base md:text-lg leading-relaxed mb-4 opacity-95 whitespace-pre-line text-justify\" data-testid=\"text-principal-message\">\n                {showFullMessage ? fullMessage : previewMessage}\n              </p>\n              \n              {!showFullMessage && (\n                <Button \n                  onClick={() => setShowFullMessage(true)}\n                  variant=\"outline\"\n                  className=\"mb-6 border-white text-white hover:bg-white hover:text-primary transition-colors\"\n                  data-testid=\"button-show-more\"\n                >\n                  Show More\n                </Button>\n              )}\n\n              {showFullMessage && (\n                <Button \n                  onClick={() => setShowFullMessage(false)}\n                  variant=\"outline\"\n                  className=\"mb-6 border-white text-white hover:bg-white hover:text-primary transition-colors\"\n                  data-testid=\"button-show-less\"\n                >\n                  Show Less\n                </Button>\n              )}\n              \n              <div className=\"font-semibold\" data-testid=\"text-principal-signature\">\n                <p className=\"text-lg\">Principal</p>\n                <p className=\"text-xl\">(Mr. Dilip Kumar Borah)</p>\n                <p className=\"text-base opacity-90\">Ramanujan Junior College</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Events Carousel Section */}\n      <div className=\"relative\">\n        <EventsCarousel />\n      </div>\n    </section>\n  );\n}\n","size_bytes":7498},"client/src/components/notice-board.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Megaphone, Calendar, Link as LinkIcon, ArrowRight } from \"lucide-react\";\nimport { Notice, Event } from \"@shared/schema\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { Link } from \"wouter\";\n\nexport default function NoticeBoard() {\n  const { data: notices, isLoading: noticesLoading } = useQuery<Notice[]>({\n    queryKey: [\"/api/notices\"],\n  });\n\n  const { data: events, isLoading: eventsLoading } = useQuery<Event[]>({\n    queryKey: [\"/api/events\"],\n  });\n\n  const formatDate = (date: Date | string) => {\n    return formatDistanceToNow(new Date(date), { addSuffix: true });\n  };\n\n  if (noticesLoading || eventsLoading) {\n    return (\n      <section className=\"py-12 bg-muted\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[...Array(3)].map((_, i) => (\n              <Card key={i} className=\"shadow-lg\">\n                <CardHeader>\n                  <div className=\"h-4 bg-muted-foreground/20 rounded animate-pulse\"></div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2\">\n                    {[...Array(4)].map((_, j) => (\n                      <div key={j} className=\"h-3 bg-muted-foreground/20 rounded animate-pulse\"></div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-12 bg-muted\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {/* Notice Board */}\n          <Card className=\"shadow-lg overflow-hidden\">\n            <CardHeader className=\"bg-primary text-primary-foreground\">\n              <CardTitle className=\"flex items-center\">\n                <Megaphone className=\"w-5 h-5 mr-2\" />\n                Notice Board\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-0\">\n              <div className=\"max-h-80 overflow-y-auto\" data-testid=\"notices-list\">\n                {!notices || notices.length === 0 ? (\n                  <div className=\"p-6 text-center text-muted-foreground\">\n                    No notices available at this time.\n                  </div>\n                ) : (\n                  <div className=\"p-6 space-y-4\">\n                    {notices.slice(0, 5).map((notice, index) => (\n                      <div key={notice.id} className={`border-l-4 pl-4 py-2 ${\n                        notice.priority === 'high' ? 'border-destructive' :\n                        notice.priority === 'medium' ? 'border-accent' : 'border-primary'\n                      }`} data-testid={`notice-${index}`}>\n                        <h4 className=\"font-semibold text-sm\">{notice.title}</h4>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {notice.publishedAt && formatDate(notice.publishedAt)}\n                        </p>\n                        {notice.category && (\n                          <Badge variant=\"outline\" className=\"mt-1 text-xs\">\n                            {notice.category}\n                          </Badge>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <div className=\"px-6 py-4 bg-muted\">\n                <Link href=\"/students#notices\" className=\"text-primary font-semibold text-sm hover:underline\" data-testid=\"view-all-notices\">\n                  View All Notices →\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Ongoing Events */}\n          <Card className=\"shadow-lg overflow-hidden\">\n            <CardHeader className=\"bg-accent text-accent-foreground\">\n              <CardTitle className=\"flex items-center\">\n                <Calendar className=\"w-5 h-5 mr-2\" />\n                Ongoing Events\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-0\">\n              <div className=\"max-h-80 overflow-y-auto\" data-testid=\"events-list\">\n                {!events || events.length === 0 ? (\n                  <div className=\"p-6 text-center text-muted-foreground\">\n                    No upcoming events at this time.\n                  </div>\n                ) : (\n                  <div className=\"p-6 space-y-4\">\n                    {events.slice(0, 3).map((event, index) => (\n                      <div key={event.id} className=\"flex items-start space-x-3\" data-testid={`event-${index}`}>\n                        <div className=\"bg-primary text-primary-foreground rounded p-2 text-xs font-bold text-center min-w-[50px]\">\n                          <div>{new Date(event.eventDate).toLocaleDateString('en-US', { month: 'short' }).toUpperCase()}</div>\n                          <div>{new Date(event.eventDate).getDate()}</div>\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-sm\">{event.title}</h4>\n                          <p className=\"text-xs text-muted-foreground\">{event.location}</p>\n                          <p className=\"text-xs text-muted-foreground mt-1\">{event.description}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <div className=\"px-6 py-4 bg-muted\">\n                <Link href=\"/news#events\" className=\"text-primary font-semibold text-sm hover:underline\" data-testid=\"view-all-events\">\n                  View All Events →\n                </Link>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Quick Links */}\n          <Card className=\"shadow-lg\">\n            <CardHeader className=\"bg-secondary text-secondary-foreground\">\n              <CardTitle className=\"flex items-center\">\n                <LinkIcon className=\"w-5 h-5 mr-2\" />\n                Quick Links\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-6 space-y-3\">\n              <Link \n                href=\"/students#timetables\" \n                className=\"flex items-center justify-between p-3 rounded hover:bg-muted transition-colors\"\n                data-testid=\"quick-link-timetables\"\n              >\n                <span className=\"flex items-center\">\n                  <Calendar className=\"w-4 h-4 mr-3 text-primary\" />\n                  Time Tables\n                </span>\n                <ArrowRight className=\"w-4 h-4 text-muted-foreground\" />\n              </Link>\n              <Link \n                href=\"/academics#calendar\" \n                className=\"flex items-center justify-between p-3 rounded hover:bg-muted transition-colors\"\n                data-testid=\"quick-link-calendar\"\n              >\n                <span className=\"flex items-center\">\n                  <Calendar className=\"w-4 h-4 mr-3 text-primary\" />\n                  Academic Calendar\n                </span>\n                <ArrowRight className=\"w-4 h-4 text-muted-foreground\" />\n              </Link>\n              <Link \n                href=\"/admissions\" \n                className=\"flex items-center justify-between p-3 rounded hover:bg-muted transition-colors\"\n                data-testid=\"quick-link-admissions\"\n              >\n                <span className=\"flex items-center\">\n                  <Calendar className=\"w-4 h-4 mr-3 text-primary\" />\n                  Admissions\n                </span>\n                <ArrowRight className=\"w-4 h-4 text-muted-foreground\" />\n              </Link>\n              <Link \n                href=\"/students#forms\" \n                className=\"flex items-center justify-between p-3 rounded hover:bg-muted transition-colors\"\n                data-testid=\"quick-link-forms\"\n              >\n                <span className=\"flex items-center\">\n                  <LinkIcon className=\"w-4 h-4 mr-3 text-primary\" />\n                  Forms & Documents\n                </span>\n                <ArrowRight className=\"w-4 h-4 text-muted-foreground\" />\n              </Link>\n              <Link \n                href=\"/students#placement\" \n                className=\"flex items-center justify-between p-3 rounded hover:bg-muted transition-colors\"\n                data-testid=\"quick-link-placement\"\n              >\n                <span className=\"flex items-center\">\n                  <LinkIcon className=\"w-4 h-4 mr-3 text-primary\" />\n                  Placement Cell\n                </span>\n                <ArrowRight className=\"w-4 h-4 text-muted-foreground\" />\n              </Link>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8989},"client/src/components/scroll-to-top.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ChevronUp } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function ScrollToTop() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <Button\n      onClick={scrollToTop}\n      className={cn(\n        \"fixed bottom-8 right-8 w-12 h-12 rounded-full shadow-lg transition-all duration-300 z-50\",\n        isVisible ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n      )}\n      size=\"icon\"\n      data-testid=\"scroll-to-top\"\n      aria-label=\"Scroll to top\"\n    >\n      <ChevronUp className=\"w-5 h-5\" />\n    </Button>\n  );\n}\n","size_bytes":1079},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"// import { Helmet } from \"react-helmet-async\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar, Award, Users, Building, FileText, BookOpen } from \"lucide-react\";\n\nexport default function About() {\n  return (\n    <>\n      {/* <Helmet>\n        <title>About Ramanujan College | History, Vision & Mission - University of Delhi</title>\n        <meta name=\"description\" content=\"Learn about Ramanujan College's rich history since 1958, our vision and mission, NAAC A++ accreditation, and commitment to academic excellence at University of Delhi.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                About Ramanujan Junior College\n              </h1>\n              <p className=\"text-xl opacity-90\" data-testid=\"page-subtitle\">\n                Education, Development and Progress\n              </p>\n              <Badge className=\"mt-4 bg-accent text-accent-foreground\" data-testid=\"naac-badge\">\n                Established 2005 - Co-Educational Excellence\n              </Badge>\n            </div>\n          </div>\n        </section>\n\n        {/* History Section */}\n        <section id=\"history\" className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              <h2 className=\"text-3xl font-bold mb-8 text-center font-serif\" data-testid=\"history-title\">\n                Our History\n              </h2>\n              \n              <div className=\"mb-12\">\n                <p className=\"text-muted-foreground mb-4 text-lg\">\n                  Ramanujan Junior College, founded in 2005, stands true to its motto - <strong className=\"text-primary\">\"Education, Development and Progress\"</strong> along with a long-cherished desire to impart quality education. The emphasis is laid on success in a competitive educational field. Its ultimate goal is to pave the way for a splendid career.\n                </p>\n                <p className=\"text-muted-foreground mb-6 text-lg\">\n                  Primarily the college was started as a coaching institute named <strong>Ramanujan Academy in 2003</strong>. It is worthwhile to mention that the academy achieved immense response from the society and later on it was decided to give birth to a junior college named Ramanujan Junior College, comprising of both science and arts stream, in the year 2005. Now, Ramanujan is on a dual service - Ramanujan Junior College and Ramanujan Academy, both are co-educational.\n                </p>\n              </div>\n\n              {/* Timeline */}\n              <div className=\"space-y-8\" data-testid=\"timeline\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"flex-shrink-0 w-16 h-16 bg-primary rounded-full flex items-center justify-center\">\n                    <Calendar className=\"w-8 h-8 text-primary-foreground\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">2003 - Ramanujan Academy</h3>\n                    <p className=\"text-muted-foreground\">\n                      Started as a coaching institute named Ramanujan Academy, achieving immense response from society with a focus on competitive examination preparation.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"flex-shrink-0 w-16 h-16 bg-accent rounded-full flex items-center justify-center\">\n                    <Building className=\"w-8 h-8 text-accent-foreground\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">2005 - Junior College Established</h3>\n                    <p className=\"text-muted-foreground\">\n                      Founded Ramanujan Junior College with both Science and Arts streams, providing comprehensive higher secondary education alongside competitive exam coaching.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"flex-shrink-0 w-16 h-16 bg-secondary rounded-full flex items-center justify-center\">\n                    <FileText className=\"w-8 h-8 text-secondary-foreground\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">2005 - AHSEC Permission</h3>\n                    <p className=\"text-muted-foreground\">\n                      Acquired permission from A.H.S.E.C to start H.S. 1st year Arts and Science classes (No. A.H.S.E.C / RER / PERM / NEW / 0506 / 6707 / dated 28/04/2005).\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"flex-shrink-0 w-16 h-16 bg-primary rounded-full flex items-center justify-center\">\n                    <Award className=\"w-8 h-8 text-primary-foreground\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">2010-2011 - Full Recognition</h3>\n                    <p className=\"text-muted-foreground\">\n                      Achieved govt. Registration (No. AS - 02 - JC - 74 dated 25/02/2010) and full Recognition from AHSEC (No. AHSEC/RPR/RRC/60/07/9327(A), dtd-20/09/2011).\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Objectives Section */}\n        <section id=\"objectives\" className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"vision-mission-title\">\n                Objectives of the College\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Our commitment to academic excellence and holistic student development\n              </p>\n            </div>\n\n            <div className=\"max-w-4xl mx-auto space-y-6\">\n              <Card className=\"p-6\">\n                <CardContent className=\"pt-6\">\n                  <ul className=\"space-y-4 text-muted-foreground\">\n                    <li className=\"flex items-start\" data-testid=\"objective-1\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>To enable the students to understand the basic concept of the core subjects.</span>\n                    </li>\n                    <li className=\"flex items-start\" data-testid=\"objective-2\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>To equip and guide the students to apply the basic concept acquired.</span>\n                    </li>\n                    <li className=\"flex items-start\" data-testid=\"objective-3\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>Due to the intensive, extensive, and analytical coaching in each subject by the permanent and qualified faculties, the students are able to prepare for all India level competitive examinations such as JEE (Mains & Advance) and All India Medical Examination.</span>\n                    </li>\n                    <li className=\"flex items-start\" data-testid=\"objective-4\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>To enable the students to acquire the skill of problem analysis in an examination environment and to ensure their optimum all-round performance.</span>\n                    </li>\n                    <li className=\"flex items-start\" data-testid=\"objective-5\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>Regular interaction with guardians by the management for monitoring the students and building a rapport between the teachers and the students to create a healthy teaching and learning environment.</span>\n                    </li>\n                    <li className=\"flex items-start\" data-testid=\"objective-6\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>The committed and qualified faculty working on a permanent basis conducts periodical tests to help the students to be mentally alert and emotionally balanced to face the toughest entrance examinations with confidence in the future.</span>\n                    </li>\n                    <li className=\"flex items-start\" data-testid=\"objective-7\">\n                      <span className=\"inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                      <span>To provide moral education with a view to preparing the students to face real life situations.</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Leadership & Management */}\n        <section id=\"leadership\" className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"leadership-title\">\n                Leadership & Management\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Ramanujan Junior College is run by \"Ramanujan Society of Education, Social and Rural Development\", a non-government organization (Registered under Societies Registration Act 1860, bearing registration No. RS/NG/254/F/47 of 2004-2005).\n              </p>\n            </div>\n\n            <div className=\"max-w-4xl mx-auto\">\n              <div className=\"grid md:grid-cols-2 gap-6 mb-8\">\n                <Card className=\"p-6\" data-testid=\"principal-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Users className=\"w-6 h-6 mr-2 text-primary\" />\n                      Principal & Secretary\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"font-semibold text-lg mb-2\">Mr. Dilip Kumar Borah</p>\n                    <p className=\"text-muted-foreground mb-3\">M.Sc., B.Ed. (NET qualified)</p>\n                    <div className=\"space-y-1 text-sm\">\n                      <p className=\"text-muted-foreground\">\n                        <span className=\"font-medium\">Phone:</span> 9435162455\n                      </p>\n                      <p className=\"text-muted-foreground\">\n                        <span className=\"font-medium\">WhatsApp:</span> 9864750236\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6\" data-testid=\"vice-principal-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Users className=\"w-6 h-6 mr-2 text-accent\" />\n                      Vice Principal\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"font-semibold text-lg mb-2\">Mrs. Sangeeta Baruah Bora</p>\n                    <p className=\"text-muted-foreground mb-3\">M.A</p>\n                    <div className=\"space-y-1 text-sm\">\n                      <p className=\"text-muted-foreground\">\n                        <span className=\"font-medium\">Phone:</span> 9864240898\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6\" data-testid=\"controller-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <FileText className=\"w-6 h-6 mr-2 text-primary\" />\n                      Controller of Examination\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"font-semibold text-lg mb-2\">Mr. Parag Borah</p>\n                    <p className=\"text-muted-foreground mb-3\">M.Sc, B.Ed</p>\n                    <div className=\"space-y-1 text-sm\">\n                      <p className=\"text-muted-foreground\">\n                        <span className=\"font-medium\">Phone:</span> 8822140960\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6\" data-testid=\"coordinator-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <BookOpen className=\"w-6 h-6 mr-2 text-accent\" />\n                      Co-ordinator (Entrance Base Test)\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"font-semibold text-lg mb-2\">Mr. Parag Borah</p>\n                    <p className=\"text-muted-foreground mb-3\">M.Sc, B.Ed</p>\n                    <div className=\"space-y-1 text-sm\">\n                      <p className=\"text-muted-foreground\">\n                        <span className=\"font-medium\">Phone:</span> 8822140960\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6\" data-testid=\"joint-coordinator-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Users className=\"w-6 h-6 mr-2 text-primary\" />\n                      Joint Co-ordinator\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"font-semibold text-lg mb-2\">Mr. Parag Paran Saikia</p>\n                    <p className=\"text-muted-foreground mb-3\">M.Sc</p>\n                    <div className=\"space-y-1 text-sm\">\n                      <p className=\"text-muted-foreground\">\n                        <span className=\"font-medium\">Phone:</span> 8486753110\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6\" data-testid=\"career-counsellor-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Award className=\"w-6 h-6 mr-2 text-accent\" />\n                      Career Counsellor\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"font-semibold text-lg mb-2\">Mr. Ankush Kahar</p>\n                    <p className=\"text-muted-foreground mb-3\">B.Tech (USA)</p>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </section>\n\n      </div>\n    </>\n  );\n}\n","size_bytes":15627},"client/src/pages/academics.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n// import { Helmet } from \"react-helmet-async\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  GraduationCap, \n  TrendingUp, \n  Atom, \n  Wrench, \n  Laptop, \n  Calculator, \n  Brain, \n  Users, \n  Award, \n  BookOpen,\n  Calendar,\n  CheckCircle,\n  Building\n} from \"lucide-react\";\nimport { Department, Course, Faculty } from \"@shared/schema\";\nimport { Link } from \"wouter\";\n\nexport default function Academics() {\n  const { data: departments, isLoading: departmentsLoading } = useQuery<Department[]>({\n    queryKey: [\"/api/departments\"],\n  });\n\n  const { data: courses, isLoading: coursesLoading } = useQuery<Course[]>({\n    queryKey: [\"/api/courses\"],\n  });\n\n  const { data: faculty, isLoading: facultyLoading } = useQuery<Faculty[]>({\n    queryKey: [\"/api/faculty\"],\n  });\n\n  const programCategories = [\n    {\n      title: \"Arts & Humanities\",\n      icon: GraduationCap,\n      description: \"English, Hindi, Political Science, Philosophy, Applied Psychology\",\n      color: \"primary\"\n    },\n    {\n      title: \"Commerce\",\n      icon: TrendingUp,\n      description: \"B.Com (Hons.), B.Com (Prog.), Business Management Studies\",\n      color: \"accent\"\n    },\n    {\n      title: \"Science\",\n      icon: Atom,\n      description: \"Mathematics, Statistics, Computer Science, Environmental Science\",\n      color: \"secondary\"\n    },\n    {\n      title: \"Vocational\",\n      icon: Wrench,\n      description: \"B.Voc courses focused on skill development and industry readiness\",\n      color: \"primary\"\n    }\n  ];\n\n  const featuredDepartments = [\n    {\n      title: \"Computer Science\",\n      icon: Laptop,\n      description: \"Established in 2013, our CS department features 5 modern air-conditioned computing labs and hosts research centers for Robotics & AI and Social Innovation.\",\n      faculty: \"6 Assistant Professors\",\n      established: 2013\n    },\n    {\n      title: \"Mathematics\",\n      icon: Calculator,\n      description: \"Our Mathematics department, honoring our college's namesake Ramanujan, offers rigorous programs in pure and applied mathematics with modern teaching methodologies.\",\n      faculty: \"Excellence in Teaching\",\n      established: 1958\n    },\n    {\n      title: \"Applied Psychology\",\n      icon: Brain,\n      description: \"Our Psychology department focuses on practical applications of psychological principles with specialized labs and research opportunities.\",\n      faculty: \"Psychology Lab Available\",\n      established: 2010\n    }\n  ];\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Academics - Ramanujan College | Departments, Courses & Faculty - University of Delhi</title>\n        <meta name=\"description\" content=\"Explore academic excellence at Ramanujan College with 16+ undergraduate programs across Arts, Commerce, Science, and Vocational streams. Discover our departments, courses, and distinguished faculty.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                Academic Excellence\n              </h1>\n              <p className=\"text-xl opacity-90\" data-testid=\"page-subtitle\">\n                Comprehensive Programs Under Choice Based Credit System\n              </p>\n              <Badge className=\"mt-4 bg-accent text-accent-foreground\" data-testid=\"cbcs-badge\">\n                CBCS Framework\n              </Badge>\n            </div>\n          </div>\n        </section>\n\n        {/* Program Categories */}\n        <section id=\"programs\" className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"programs-title\">\n                Academic Programs\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Explore our comprehensive range of undergraduate programs designed to provide \n                quality education and prepare students for successful careers.\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\">\n              {programCategories.map((category, index) => (\n                <Card key={category.title} className=\"hover:shadow-lg transition-shadow\" data-testid={`program-category-${index}`}>\n                  <CardContent className=\"p-6 text-center\">\n                    <div className={`w-12 h-12 bg-${category.color} rounded-lg flex items-center justify-center mx-auto mb-4`}>\n                      <category.icon className=\"w-6 h-6 text-primary-foreground\" />\n                    </div>\n                    <h3 className=\"font-semibold mb-2\">{category.title}</h3>\n                    <p className=\"text-sm text-muted-foreground mb-4\">{category.description}</p>\n                    <Button variant=\"link\" className=\"text-primary p-0 h-auto font-medium hover:underline\" data-testid={`explore-${category.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      Explore Programs →\n                    </Button>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Departments */}\n        <section id=\"departments\" className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"departments-title\">\n                Our Departments\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                18 academic departments offering specialized education and research opportunities\n              </p>\n            </div>\n\n            {departmentsLoading ? (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {[...Array(6)].map((_, i) => (\n                  <Card key={i} className=\"p-6\">\n                    <Skeleton className=\"h-4 w-3/4 mb-4\" />\n                    <Skeleton className=\"h-3 w-full mb-2\" />\n                    <Skeleton className=\"h-3 w-2/3 mb-4\" />\n                    <Skeleton className=\"h-8 w-24\" />\n                  </Card>\n                ))}\n              </div>\n            ) : (\n              <>\n                {/* Featured Departments */}\n                <div className=\"mb-12\">\n                  <h3 className=\"text-2xl font-semibold mb-8 text-center\">Featured Departments</h3>\n                  <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                    {featuredDepartments.map((dept, index) => (\n                      <Card key={dept.title} className=\"p-6\" data-testid={`featured-department-${index}`}>\n                        <div className=\"flex items-center space-x-3 mb-4\">\n                          <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\n                            <dept.icon className=\"w-5 h-5 text-primary-foreground\" />\n                          </div>\n                          <h4 className=\"text-lg font-semibold\">{dept.title}</h4>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground mb-4\">{dept.description}</p>\n                        <div className=\"flex items-center text-sm text-muted-foreground mb-4\">\n                          <Users className=\"w-4 h-4 mr-2\" />\n                          {dept.faculty}\n                        </div>\n                        <Button variant=\"link\" className=\"text-primary p-0 h-auto font-medium hover:underline\" data-testid={`view-department-${dept.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                          View Department →\n                        </Button>\n                      </Card>\n                    ))}\n                  </div>\n                </div>\n\n                {/* All Departments */}\n                {departments && departments.length > 0 && (\n                  <div>\n                    <h3 className=\"text-2xl font-semibold mb-8 text-center\">All Departments</h3>\n                    <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                      {departments.map((dept, index) => (\n                        <Card key={dept.id} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`department-${index}`}>\n                          <CardHeader className=\"p-0 pb-4\">\n                            <CardTitle className=\"flex items-center text-lg\">\n                              <Building className=\"w-5 h-5 mr-2 text-primary\" />\n                              {dept.name}\n                            </CardTitle>\n                          </CardHeader>\n                          <CardContent className=\"p-0\">\n                            <p className=\"text-sm text-muted-foreground mb-4\">{dept.description}</p>\n                            {dept.established && (\n                              <div className=\"flex items-center text-sm text-muted-foreground mb-2\">\n                                <Calendar className=\"w-4 h-4 mr-2\" />\n                                Established: {dept.established}\n                              </div>\n                            )}\n                            {dept.facultyCount && dept.facultyCount > 0 && (\n                              <div className=\"flex items-center text-sm text-muted-foreground mb-4\">\n                                <Users className=\"w-4 h-4 mr-2\" />\n                                {dept.facultyCount} Faculty Members\n                              </div>\n                            )}\n                            <Button variant=\"outline\" size=\"sm\" data-testid={`view-dept-details-${index}`}>\n                              View Details\n                            </Button>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </section>\n\n        {/* Courses */}\n        <section id=\"courses\" className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"courses-title\">\n                Course Catalog\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                16+ undergraduate programs designed under the Choice Based Credit System\n              </p>\n            </div>\n\n            {coursesLoading ? (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {[...Array(6)].map((_, i) => (\n                  <Card key={i} className=\"p-6\">\n                    <Skeleton className=\"h-4 w-3/4 mb-4\" />\n                    <Skeleton className=\"h-3 w-full mb-2\" />\n                    <Skeleton className=\"h-3 w-2/3 mb-4\" />\n                    <Skeleton className=\"h-8 w-24\" />\n                  </Card>\n                ))}\n              </div>\n            ) : (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {courses && courses.length > 0 ? (\n                  courses.map((course, index) => (\n                    <Card key={course.id} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`course-${index}`}>\n                      <CardHeader className=\"p-0 pb-4\">\n                        <CardTitle className=\"text-lg\">{course.name}</CardTitle>\n                        <Badge variant=\"outline\">{course.code}</Badge>\n                      </CardHeader>\n                      <CardContent className=\"p-0\">\n                        <p className=\"text-sm text-muted-foreground mb-4\">{course.description}</p>\n                        <div className=\"space-y-2 mb-4\">\n                          <div className=\"flex items-center text-sm\">\n                            <Calendar className=\"w-4 h-4 mr-2 text-primary\" />\n                            Duration: {course.duration}\n                          </div>\n                          {course.seats && (\n                            <div className=\"flex items-center text-sm\">\n                              <Users className=\"w-4 h-4 mr-2 text-primary\" />\n                              Seats: {course.seats}\n                            </div>\n                          )}\n                        </div>\n                        <Button variant=\"outline\" size=\"sm\" data-testid={`view-course-details-${index}`}>\n                          View Syllabus\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  ))\n                ) : (\n                  <div className=\"col-span-full text-center py-12\">\n                    <BookOpen className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                    <h3 className=\"text-xl font-semibold mb-2\">Course Information</h3>\n                    <p className=\"text-muted-foreground\">\n                      Course details will be available soon. Please check back later.\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </section>\n\n        {/* Faculty */}\n        <section id=\"faculty\" className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"faculty-title\">\n                Our Faculty\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Distinguished educators and researchers committed to academic excellence\n              </p>\n            </div>\n\n            {facultyLoading ? (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {[...Array(6)].map((_, i) => (\n                  <Card key={i} className=\"p-6\">\n                    <Skeleton className=\"h-4 w-3/4 mb-4\" />\n                    <Skeleton className=\"h-3 w-full mb-2\" />\n                    <Skeleton className=\"h-3 w-2/3 mb-4\" />\n                    <Skeleton className=\"h-8 w-24\" />\n                  </Card>\n                ))}\n              </div>\n            ) : (\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {faculty && faculty.length > 0 ? (\n                  faculty.slice(0, 9).map((member, index) => (\n                    <Card key={member.id} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`faculty-${index}`}>\n                      <CardHeader className=\"p-0 pb-4 text-center\">\n                        <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n                          <Users className=\"w-8 h-8 text-primary-foreground\" />\n                        </div>\n                        <CardTitle className=\"text-lg\">{member.name}</CardTitle>\n                        <Badge variant=\"outline\">{member.designation}</Badge>\n                      </CardHeader>\n                      <CardContent className=\"p-0 text-center\">\n                        <p className=\"text-sm text-muted-foreground mb-2\">{member.qualification}</p>\n                        {member.specialization && (\n                          <p className=\"text-sm text-primary mb-4\">{member.specialization}</p>\n                        )}\n                        {member.experience && (\n                          <div className=\"flex items-center justify-center text-sm text-muted-foreground\">\n                            <Award className=\"w-4 h-4 mr-2\" />\n                            {member.experience} years experience\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  ))\n                ) : (\n                  <div className=\"col-span-full text-center py-12\">\n                    <Users className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                    <h3 className=\"text-xl font-semibold mb-2\">Faculty Information</h3>\n                    <p className=\"text-muted-foreground\">\n                      Faculty profiles will be available soon. Please check back later.\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </section>\n\n        {/* Academic Resources */}\n        <section id=\"calendar\" className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"resources-title\">\n                Academic Resources\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Essential resources to support your academic journey\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              <Card className=\"bg-primary text-primary-foreground p-8\">\n                <h3 className=\"text-xl font-semibold mb-4\">Academic Framework</h3>\n                <ul className=\"space-y-3\">\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Choice Based Credit System (CBCS)\n                  </li>\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    University of Delhi Syllabus\n                  </li>\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Program & Course Outcomes\n                  </li>\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Regular Academic Calendar\n                  </li>\n                </ul>\n                <Button \n                  className=\"mt-6 bg-primary-foreground text-primary hover:bg-primary-foreground/90\"\n                  data-testid=\"view-academic-calendar\"\n                >\n                  View Academic Calendar\n                </Button>\n              </Card>\n\n              <Card className=\"bg-accent text-accent-foreground p-8\">\n                <h3 className=\"text-xl font-semibold mb-4\">Student Support</h3>\n                <ul className=\"space-y-3\">\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Time Tables & Schedules\n                  </li>\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Academic Counseling\n                  </li>\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Career Guidance\n                  </li>\n                  <li className=\"flex items-center\">\n                    <CheckCircle className=\"w-5 h-5 mr-3\" />\n                    Research Opportunities\n                  </li>\n                </ul>\n                <Link href=\"/students\">\n                  <Button \n                    className=\"mt-6 bg-accent-foreground text-accent hover:bg-accent-foreground/90\"\n                    data-testid=\"student-resources\"\n                  >\n                    Student Resources\n                  </Button>\n                </Link>\n              </Card>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n","size_bytes":20024},"client/src/pages/admissions.tsx":{"content":"// import { Helmet } from \"react-helmet-async\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  FileText, \n  Calendar, \n  IndianRupee, \n  Users, \n  Clock, \n  CheckCircle, \n  Download,\n  ExternalLink,\n  GraduationCap,\n  Star,\n  Phone,\n  Mail,\n  MapPin\n} from \"lucide-react\";\n\nexport default function Admissions() {\n  const admissionSteps = [\n    {\n      step: 1,\n      title: \"Check Eligibility\",\n      description: \"Verify eligibility criteria for your desired program\"\n    },\n    {\n      step: 2,\n      title: \"Download Prospectus\",\n      description: \"Get detailed information about courses and admission process\"\n    },\n    {\n      step: 3,\n      title: \"Fill Application\",\n      description: \"Complete the online application form with required details\"\n    },\n    {\n      step: 4,\n      title: \"Document Verification\",\n      description: \"Submit required documents for verification\"\n    },\n    {\n      step: 5,\n      title: \"Merit List\",\n      description: \"Check merit lists and counseling schedule\"\n    },\n    {\n      step: 6,\n      title: \"Admission Confirmation\",\n      description: \"Complete fee payment and secure your admission\"\n    }\n  ];\n\n  const quotaCategories = [\n    {\n      title: \"General Merit\",\n      description: \"Based on academic performance in qualifying examination\",\n      percentage: \"Open Merit\"\n    },\n    {\n      title: \"ECA Quota\",\n      description: \"Extra-Curricular Activities including sports, music, dance, theatre\",\n      percentage: \"5%\"\n    },\n    {\n      title: \"Sports Quota\",\n      description: \"Outstanding achievements in various sports disciplines\",\n      percentage: \"5%\"\n    },\n    {\n      title: \"CW Quota\",\n      description: \"Children/Widows of Armed Forces Personnel\",\n      percentage: \"5%\"\n    }\n  ];\n\n  const documents = [\n    \"Class X Mark Sheet and Certificate\",\n    \"Class XII Mark Sheet and Certificate\",\n    \"Transfer Certificate\",\n    \"Character Certificate\",\n    \"Category Certificate (if applicable)\",\n    \"Sports/ECA Achievement Certificates\",\n    \"Passport Size Photographs\",\n    \"Aadhar Card Copy\"\n  ];\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Admissions - Ramanujan College | Apply for Undergraduate Programs - University of Delhi</title>\n        <meta name=\"description\" content=\"Apply for admission to Ramanujan College, University of Delhi. Get information about admission process, eligibility criteria, fee structure, and important dates for undergraduate programs.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                Admissions 2025-26\n              </h1>\n              <p className=\"text-xl opacity-90 mb-6\" data-testid=\"page-subtitle\">\n                Join Our Academic Excellence Journey\n              </p>\n              <div className=\"flex flex-wrap justify-center gap-4\">\n                <Badge className=\"bg-accent text-accent-foreground px-4 py-2\" data-testid=\"naac-badge\">\n                  NAAC A++ Grade\n                </Badge>\n                <Badge className=\"bg-secondary text-secondary-foreground px-4 py-2\" data-testid=\"nirf-badge\">\n                  NIRF Ranked\n                </Badge>\n                <Badge className=\"bg-accent text-accent-foreground px-4 py-2\" data-testid=\"du-badge\">\n                  University of Delhi\n                </Badge>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Important Dates */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"dates-title\">\n                Important Dates\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Keep track of crucial admission deadlines and events\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card className=\"text-center p-6\" data-testid=\"date-application-start\">\n                <Calendar className=\"w-12 h-12 mx-auto mb-4 text-primary\" />\n                <h3 className=\"font-semibold mb-2\">Application Starts</h3>\n                <p className=\"text-2xl font-bold text-primary mb-2\">May 15</p>\n                <p className=\"text-sm text-muted-foreground\">2025</p>\n              </Card>\n\n              <Card className=\"text-center p-6\" data-testid=\"date-application-end\">\n                <Clock className=\"w-12 h-12 mx-auto mb-4 text-accent\" />\n                <h3 className=\"font-semibold mb-2\">Application Ends</h3>\n                <p className=\"text-2xl font-bold text-accent mb-2\">June 30</p>\n                <p className=\"text-sm text-muted-foreground\">2025</p>\n              </Card>\n\n              <Card className=\"text-center p-6\" data-testid=\"date-merit-list\">\n                <Users className=\"w-12 h-12 mx-auto mb-4 text-secondary\" />\n                <h3 className=\"font-semibold mb-2\">Merit List</h3>\n                <p className=\"text-2xl font-bold text-secondary mb-2\">July 15</p>\n                <p className=\"text-sm text-muted-foreground\">2025</p>\n              </Card>\n\n              <Card className=\"text-center p-6\" data-testid=\"date-classes-begin\">\n                <GraduationCap className=\"w-12 h-12 mx-auto mb-4 text-primary\" />\n                <h3 className=\"font-semibold mb-2\">Classes Begin</h3>\n                <p className=\"text-2xl font-bold text-primary mb-2\">August 1</p>\n                <p className=\"text-sm text-muted-foreground\">2025</p>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Admission Process */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"process-title\">\n                Admission Process\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Follow these simple steps to secure your admission at Ramanujan College\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {admissionSteps.map((step, index) => (\n                <Card key={step.step} className=\"p-6 text-center hover:shadow-lg transition-shadow\" data-testid={`admission-step-${index}`}>\n                  <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4 text-primary-foreground font-bold text-xl\">\n                    {step.step}\n                  </div>\n                  <h3 className=\"text-lg font-semibold mb-3\">{step.title}</h3>\n                  <p className=\"text-muted-foreground\">{step.description}</p>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Programs & Eligibility */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"programs-title\">\n                Programs & Eligibility\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Explore our undergraduate programs and their eligibility criteria\n              </p>\n            </div>\n\n            <div className=\"grid lg:grid-cols-2 gap-8\">\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"text-2xl\">Undergraduate Programs</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"space-y-4\">\n                    <div className=\"border-l-4 border-primary pl-4\">\n                      <h4 className=\"font-semibold\">Arts & Humanities</h4>\n                      <p className=\"text-sm text-muted-foreground\">B.A. (Hons.) in English, Hindi, Political Science, Philosophy, Applied Psychology</p>\n                    </div>\n                    <div className=\"border-l-4 border-accent pl-4\">\n                      <h4 className=\"font-semibold\">Commerce</h4>\n                      <p className=\"text-sm text-muted-foreground\">B.Com (Hons.), B.Com (Prog.), BMS</p>\n                    </div>\n                    <div className=\"border-l-4 border-secondary pl-4\">\n                      <h4 className=\"font-semibold\">Science</h4>\n                      <p className=\"text-sm text-muted-foreground\">B.Sc. (Hons.) in Mathematics, Statistics, Computer Science, Environmental Science</p>\n                    </div>\n                    <div className=\"border-l-4 border-primary pl-4\">\n                      <h4 className=\"font-semibold\">Vocational</h4>\n                      <p className=\"text-sm text-muted-foreground\">B.Voc in Banking Operations, Software Development</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"text-2xl\">General Eligibility</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                      <span className=\"text-sm\">Passed Class XII from a recognized board</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                      <span className=\"text-sm\">Minimum aggregate as per program requirements</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                      <span className=\"text-sm\">Subject-specific requirements for Honours programs</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                      <span className=\"text-sm\">Valid CUET score (as per University norms)</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                      <span className=\"text-sm\">Age limit as prescribed by University of Delhi</span>\n                    </li>\n                  </ul>\n                  <Button className=\"mt-6 w-full\" data-testid=\"detailed-eligibility\">\n                    View Detailed Eligibility Criteria\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Fee Structure */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"fee-title\">\n                Fee Structure 2025-26\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Transparent and affordable fee structure for all programs\n              </p>\n            </div>\n\n            <div className=\"max-w-4xl mx-auto\">\n              <Card className=\"overflow-hidden\">\n                <CardHeader className=\"bg-primary text-primary-foreground\">\n                  <CardTitle className=\"flex items-center\">\n                    <IndianRupee className=\"w-6 h-6 mr-2\" />\n                    Annual Fee Structure\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\" data-testid=\"fee-table\">\n                      <thead className=\"bg-muted\">\n                        <tr>\n                          <th className=\"text-left p-4 font-semibold\">Program</th>\n                          <th className=\"text-right p-4 font-semibold\">Annual Fee</th>\n                          <th className=\"text-right p-4 font-semibold\">One-time Fee</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr className=\"border-b\">\n                          <td className=\"p-4\">B.A. (Honours) / B.A. (Programme)</td>\n                          <td className=\"text-right p-4\">₹12,000</td>\n                          <td className=\"text-right p-4\">₹2,000</td>\n                        </tr>\n                        <tr className=\"border-b\">\n                          <td className=\"p-4\">B.Com (Honours) / B.Com (Programme)</td>\n                          <td className=\"text-right p-4\">₹15,000</td>\n                          <td className=\"text-right p-4\">₹2,000</td>\n                        </tr>\n                        <tr className=\"border-b\">\n                          <td className=\"p-4\">B.Sc. (Honours)</td>\n                          <td className=\"text-right p-4\">₹18,000</td>\n                          <td className=\"text-right p-4\">₹2,500</td>\n                        </tr>\n                        <tr className=\"border-b\">\n                          <td className=\"p-4\">BMS / B.Voc</td>\n                          <td className=\"text-right p-4\">₹20,000</td>\n                          <td className=\"text-right p-4\">₹3,000</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  <div className=\"p-4 bg-muted text-sm text-muted-foreground\">\n                    * Fees are subject to revision as per University guidelines. Additional charges may apply for laboratory courses.\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Quota Information */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"quota-title\">\n                Admission Quotas\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Multiple pathways for admission based on merit and special categories\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {quotaCategories.map((quota, index) => (\n                <Card key={quota.title} className=\"p-6 text-center hover:shadow-lg transition-shadow\" data-testid={`quota-${index}`}>\n                  <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Star className=\"w-8 h-8 text-primary-foreground\" />\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">{quota.title}</h3>\n                  <Badge variant=\"outline\" className=\"mb-3\">{quota.percentage}</Badge>\n                  <p className=\"text-sm text-muted-foreground\">{quota.description}</p>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Required Documents */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"documents-title\">\n                Required Documents\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Ensure you have all necessary documents ready for the admission process\n              </p>\n            </div>\n\n            <div className=\"max-w-3xl mx-auto\">\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"flex items-center text-2xl\">\n                    <FileText className=\"w-6 h-6 mr-2 text-primary\" />\n                    Document Checklist\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    {documents.map((document, index) => (\n                      <div key={document} className=\"flex items-center\" data-testid={`document-${index}`}>\n                        <CheckCircle className=\"w-5 h-5 mr-3 text-primary flex-shrink-0\" />\n                        <span className=\"text-sm\">{document}</span>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"mt-6 p-4 bg-accent/10 rounded-lg\">\n                    <p className=\"text-sm text-muted-foreground\">\n                      <strong>Note:</strong> All documents should be self-attested. Original documents will be verified at the time of admission.\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Downloads & Links */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"downloads-title\">\n                Downloads & Links\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Important forms and information for the admission process\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <Download className=\"w-12 h-12 mx-auto mb-4 text-primary\" />\n                <h3 className=\"font-semibold mb-2\">Prospectus 2025-26</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Complete admission guide with course details</p>\n                <Button variant=\"outline\" data-testid=\"download-prospectus\">\n                  Download PDF\n                </Button>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <ExternalLink className=\"w-12 h-12 mx-auto mb-4 text-accent\" />\n                <h3 className=\"font-semibold mb-2\">Online Application</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Apply online through University portal</p>\n                <Button variant=\"outline\" data-testid=\"apply-online\">\n                  Apply Now\n                </Button>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <FileText className=\"w-12 h-12 mx-auto mb-4 text-secondary\" />\n                <h3 className=\"font-semibold mb-2\">Merit Lists</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Check published merit lists and cutoffs</p>\n                <Button variant=\"outline\" data-testid=\"check-merit\">\n                  Check Lists\n                </Button>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Admission Helpdesk */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"helpdesk-title\">\n                Admission Helpdesk\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Get assistance with your admission queries and application process\n              </p>\n            </div>\n\n            <div className=\"max-w-4xl mx-auto\">\n              <Card className=\"p-8\">\n                <div className=\"grid md:grid-cols-3 gap-6\">\n                  <div className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <Phone className=\"w-8 h-8 text-primary-foreground\" />\n                    </div>\n                    <h3 className=\"font-semibold mb-2\">Phone Support</h3>\n                    <p className=\"text-sm text-muted-foreground mb-2\">+91-11-26430047</p>\n                    <p className=\"text-xs text-muted-foreground\">Mon-Fri: 9:00 AM - 5:00 PM</p>\n                  </div>\n\n                  <div className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-accent rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <Mail className=\"w-8 h-8 text-accent-foreground\" />\n                    </div>\n                    <h3 className=\"font-semibold mb-2\">Email Support</h3>\n                    <p className=\"text-sm text-muted-foreground mb-2\">admissions@ramanujancollege.ac.in</p>\n                    <p className=\"text-xs text-muted-foreground\">Response within 24 hours</p>\n                  </div>\n\n                  <div className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-secondary rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <MapPin className=\"w-8 h-8 text-secondary-foreground\" />\n                    </div>\n                    <h3 className=\"font-semibold mb-2\">Visit Us</h3>\n                    <p className=\"text-sm text-muted-foreground mb-2\">Kalkaji, New Delhi - 110019</p>\n                    <p className=\"text-xs text-muted-foreground\">Admission Office</p>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n","size_bytes":22217},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\n// import { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { \n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  MapPin,\n  Phone,\n  Mail,\n  Clock,\n  Send,\n  User,\n  MessageSquare,\n  Building,\n  GraduationCap,\n  Users,\n  Briefcase,\n  BookOpen,\n  HelpCircle,\n  Facebook,\n  Twitter,\n  Instagram,\n  Youtube,\n  CheckCircle\n} from \"lucide-react\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.preprocess((val) => val === \"\" ? undefined : val, z.string().min(10, \"Please enter a valid phone number\").optional()),\n  subject: z.string().min(1, \"Please select a subject\"),\n  department: z.string().min(1, \"Please select a department\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nexport default function Contact() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      subject: \"\",\n      department: \"\",\n      message: \"\",\n    },\n  });\n\n  const onSubmit = async (data: ContactFormData) => {\n    setIsSubmitting(true);\n    try {\n      // In a real application, this would send the data to an API endpoint\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n      \n      toast({\n        title: \"Message Sent Successfully\",\n        description: \"Thank you for your inquiry. We'll get back to you within 24 hours.\",\n      });\n      \n      form.reset();\n    } catch (error) {\n      toast({\n        title: \"Error Sending Message\",\n        description: \"Please try again later or contact us directly.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const contactInfo = [\n    {\n      icon: MapPin,\n      title: \"Address\",\n      content: \"Kalkaji, New Delhi - 110019\",\n      color: \"primary\"\n    },\n    {\n      icon: Phone,\n      title: \"Phone\",\n      content: \"+91-11-26430047\",\n      color: \"accent\"\n    },\n    {\n      icon: Mail,\n      title: \"Email\",\n      content: \"info@ramanujancollege.ac.in\",\n      color: \"secondary\"\n    },\n    {\n      icon: Clock,\n      title: \"Office Hours\",\n      content: \"Mon-Fri: 9:00 AM - 5:00 PM\",\n      color: \"primary\"\n    }\n  ];\n\n  const departmentContacts = [\n    {\n      title: \"Admissions Office\",\n      email: \"admissions@ramanujancollege.ac.in\",\n      phone: \"+91-11-26430047\",\n      icon: GraduationCap,\n      description: \"For admission queries and application assistance\"\n    },\n    {\n      title: \"Academic Office\",\n      email: \"academics@ramanujancollege.ac.in\",\n      phone: \"+91-11-26430048\",\n      icon: BookOpen,\n      description: \"For academic matters, timetables, and course information\"\n    },\n    {\n      title: \"Student Affairs\",\n      email: \"students@ramanujancollege.ac.in\",\n      phone: \"+91-11-26430049\",\n      icon: Users,\n      description: \"For student services, societies, and welfare matters\"\n    },\n    {\n      title: \"Placement Cell\",\n      email: \"placement@ramanujancollege.ac.in\",\n      phone: \"+91-11-26430050\",\n      icon: Briefcase,\n      description: \"For career guidance and placement opportunities\"\n    },\n    {\n      title: \"Principal's Office\",\n      email: \"principal@ramanujancollege.ac.in\",\n      phone: \"+91-11-26430051\",\n      icon: Building,\n      description: \"For administrative matters and official correspondence\"\n    },\n    {\n      title: \"General Inquiries\",\n      email: \"info@ramanujancollege.ac.in\",\n      phone: \"+91-11-26430047\",\n      icon: HelpCircle,\n      description: \"For general questions and information\"\n    }\n  ];\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Contact Us - Ramanujan College | Get in Touch - University of Delhi</title>\n        <meta name=\"description\" content=\"Contact Ramanujan College for admissions, academic queries, and general information. Find our address, phone numbers, email contacts, and office hours in New Delhi.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                Contact Us\n              </h1>\n              <p className=\"text-xl opacity-90\" data-testid=\"page-subtitle\">\n                Get in Touch with Ramanujan College\n              </p>\n              <p className=\"text-lg opacity-80 mt-4\">\n                We're here to help with your queries and provide assistance\n              </p>\n            </div>\n          </div>\n        </section>\n\n        {/* Contact Information */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"contact-info-title\">\n                Contact Information\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Multiple ways to reach us for different needs\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\">\n              {contactInfo.map((info, index) => (\n                <Card key={info.title} className=\"p-6 text-center hover:shadow-lg transition-shadow\" data-testid={`contact-info-${index}`}>\n                  <div className={`w-16 h-16 bg-${info.color} rounded-full flex items-center justify-center mx-auto mb-4`}>\n                    <info.icon className=\"w-8 h-8 text-primary-foreground\" />\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">{info.title}</h3>\n                  <p className=\"text-muted-foreground\">{info.content}</p>\n                </Card>\n              ))}\n            </div>\n\n            {/* Campus Location */}\n            <Card className=\"p-8 mb-16\">\n              <CardHeader className=\"p-0 mb-6\">\n                <CardTitle className=\"flex items-center text-2xl\">\n                  <MapPin className=\"w-6 h-6 mr-2 text-primary\" />\n                  Campus Location\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n                  <div>\n                    <h4 className=\"text-lg font-semibold mb-4\">How to Reach Us</h4>\n                    <div className=\"space-y-3 text-muted-foreground\">\n                      <div className=\"flex items-start\">\n                        <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                        <span className=\"text-sm\">\n                          <strong>By Metro:</strong> Nearest metro station is Kalkaji Mandir (Violet Line). \n                          The college is a 5-minute walk from the metro station.\n                        </span>\n                      </div>\n                      <div className=\"flex items-start\">\n                        <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                        <span className=\"text-sm\">\n                          <strong>By Bus:</strong> Multiple DTC buses ply to Kalkaji. \n                          Alight at Kalkaji bus stop and walk 2 minutes to the college.\n                        </span>\n                      </div>\n                      <div className=\"flex items-start\">\n                        <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                        <span className=\"text-sm\">\n                          <strong>By Car:</strong> Ample parking space available on campus. \n                          The college is well-connected by road from all parts of Delhi.\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bg-muted rounded-lg p-4 text-center\">\n                    <MapPin className=\"w-16 h-16 mx-auto text-primary mb-4\" />\n                    <p className=\"font-semibold mb-2\">Ramanujan College</p>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      University of Delhi<br />\n                      Kalkaji, New Delhi - 110019\n                    </p>\n                    <a \n                      href=\"https://maps.google.com/?q=Ramanujan+College,+Kalkaji,+New+Delhi,+110019\" \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                    >\n                      <Button variant=\"outline\" data-testid=\"view-map\">\n                        View on Google Maps\n                      </Button>\n                    </a>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </section>\n\n        {/* Department Contacts */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"department-contacts-title\">\n                Department Contacts\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Direct contact information for specific departments and services\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {departmentContacts.map((dept, index) => (\n                <Card key={dept.title} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`department-contact-${index}`}>\n                  <CardHeader className=\"p-0 pb-4\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center mr-4\">\n                        <dept.icon className=\"w-6 h-6 text-primary-foreground\" />\n                      </div>\n                      <CardTitle className=\"text-lg\">{dept.title}</CardTitle>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <p className=\"text-sm text-muted-foreground mb-4\">{dept.description}</p>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center text-sm\">\n                        <Mail className=\"w-4 h-4 mr-2 text-primary\" />\n                        <a href={`mailto:${dept.email}`} className=\"text-primary hover:underline\">\n                          {dept.email}\n                        </a>\n                      </div>\n                      <div className=\"flex items-center text-sm\">\n                        <Phone className=\"w-4 h-4 mr-2 text-primary\" />\n                        <a href={`tel:${dept.phone}`} className=\"text-primary hover:underline\">\n                          {dept.phone}\n                        </a>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Contact Form */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"contact-form-title\">\n                  Send us a Message\n                </h2>\n                <p className=\"text-lg text-muted-foreground\">\n                  Have a question or need assistance? Fill out the form below and we'll get back to you\n                </p>\n              </div>\n\n              <Card className=\"p-8\">\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\" data-testid=\"contact-form\">\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"name\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Full Name *</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Enter your full name\" {...field} data-testid=\"input-name\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email Address *</FormLabel>\n                            <FormControl>\n                              <Input type=\"email\" placeholder=\"Enter your email address\" {...field} data-testid=\"input-email\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"phone\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Phone Number</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Enter your phone number\" {...field} data-testid=\"input-phone\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"subject\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Subject *</FormLabel>\n                            <Select onValueChange={field.onChange} value={field.value || undefined}>\n                              <FormControl>\n                                <SelectTrigger data-testid=\"select-subject\">\n                                  <SelectValue placeholder=\"Select a subject\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                <SelectItem value=\"admission\">Admission Inquiry</SelectItem>\n                                <SelectItem value=\"academic\">Academic Information</SelectItem>\n                                <SelectItem value=\"placement\">Placement & Career</SelectItem>\n                                <SelectItem value=\"facilities\">Facilities & Infrastructure</SelectItem>\n                                <SelectItem value=\"research\">Research Opportunities</SelectItem>\n                                <SelectItem value=\"general\">General Inquiry</SelectItem>\n                                <SelectItem value=\"other\">Other</SelectItem>\n                              </SelectContent>\n                            </Select>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <FormField\n                      control={form.control}\n                      name=\"department\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Department *</FormLabel>\n                          <Select onValueChange={field.onChange} value={field.value || undefined}>\n                            <FormControl>\n                              <SelectTrigger data-testid=\"select-department\">\n                                <SelectValue placeholder=\"Select relevant department\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"admissions\">Admissions Office</SelectItem>\n                              <SelectItem value=\"academics\">Academic Office</SelectItem>\n                              <SelectItem value=\"students\">Student Affairs</SelectItem>\n                              <SelectItem value=\"placement\">Placement Cell</SelectItem>\n                              <SelectItem value=\"principal\">Principal's Office</SelectItem>\n                              <SelectItem value=\"library\">Library</SelectItem>\n                              <SelectItem value=\"accounts\">Accounts Department</SelectItem>\n                              <SelectItem value=\"general\">General Office</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"message\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Message *</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              placeholder=\"Please provide details about your inquiry...\"\n                              className=\"min-h-[120px] resize-none\"\n                              {...field}\n                              data-testid=\"textarea-message\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <div className=\"text-center\">\n                      <Button\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        className=\"px-8 py-3\"\n                        data-testid=\"submit-contact-form\"\n                      >\n                        {isSubmitting ? (\n                          <>\n                            <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                            Sending...\n                          </>\n                        ) : (\n                          <>\n                            <Send className=\"w-4 h-4 mr-2\" />\n                            Send Message\n                          </>\n                        )}\n                      </Button>\n                    </div>\n                  </form>\n                </Form>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Social Media & Additional Info */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"grid lg:grid-cols-2 gap-8\">\n              {/* Social Media */}\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"text-2xl\">Follow Us</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <p className=\"text-muted-foreground mb-6\">\n                    Stay connected with us through social media for the latest updates, events, and announcements.\n                  </p>\n                  <div className=\"flex space-x-4\">\n                    <a \n                      href=\"#\" \n                      className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center text-primary-foreground hover:bg-primary/80 transition-colors\"\n                      data-testid=\"social-facebook\"\n                      aria-label=\"Facebook\"\n                    >\n                      <Facebook className=\"w-6 h-6\" />\n                    </a>\n                    <a \n                      href=\"#\" \n                      className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center text-primary-foreground hover:bg-primary/80 transition-colors\"\n                      data-testid=\"social-twitter\"\n                      aria-label=\"Twitter\"\n                    >\n                      <Twitter className=\"w-6 h-6\" />\n                    </a>\n                    <a \n                      href=\"#\" \n                      className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center text-primary-foreground hover:bg-primary/80 transition-colors\"\n                      data-testid=\"social-instagram\"\n                      aria-label=\"Instagram\"\n                    >\n                      <Instagram className=\"w-6 h-6\" />\n                    </a>\n                    <a \n                      href=\"#\" \n                      className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center text-primary-foreground hover:bg-primary/80 transition-colors\"\n                      data-testid=\"social-youtube\"\n                      aria-label=\"YouTube\"\n                    >\n                      <Youtube className=\"w-6 h-6\" />\n                    </a>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Visit Guidelines */}\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"text-2xl\">Visit Us</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <p className=\"text-muted-foreground mb-4\">\n                    Planning to visit our campus? Here are some helpful guidelines:\n                  </p>\n                  <ul className=\"space-y-3\">\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Visitor registration at the main gate is mandatory</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Carry a valid photo ID for verification</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Campus tours available during working hours</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">Prior appointment recommended for meetings</span>\n                    </li>\n                  </ul>\n                  <Button variant=\"outline\" className=\"mt-6\" data-testid=\"schedule-visit\">\n                    Schedule a Visit\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n","size_bytes":24149},"client/src/pages/home.tsx":{"content":"// import { Helmet } from \"react-helmet-async\";\nimport HeroSection from \"@/components/hero-section\";\nimport GalleryCarousel from \"@/components/gallery-carousel\";\nimport NoticeBoard from \"@/components/notice-board\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Eye, Target, Heart, GraduationCap, TrendingUp, Atom, Wrench, Users, FlaskConical, ShieldCheck, CheckCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function Home() {\n  return (\n    <>\n      {/* <Helmet>\n        <title>Ramanujan College - University of Delhi | Premier Institution for Higher Education</title>\n        <meta name=\"description\" content=\"Ramanujan College, University of Delhi - A NAAC A++ graded institution offering undergraduate programs in Arts, Commerce, Science, and Vocational streams. Discover excellence in education since 1958.\" />\n        <meta property=\"og:title\" content=\"Ramanujan College - University of Delhi\" />\n        <meta property=\"og:description\" content=\"NAAC A++ graded premier institution offering quality higher education with 16+ academic programs and world-class facilities.\" />\n        <meta property=\"og:type\" content=\"website\" />\n      </Helmet> */}\n\n      {/* Hero Section */}\n      <HeroSection />\n\n      {/* Gallery Carousel */}\n      <GalleryCarousel />\n\n      {/* Notice Board & Quick Links */}\n      <NoticeBoard />\n\n      {/* About Section */}\n      <section id=\"about\" className=\"py-16 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-4xl font-bold mb-4 font-serif\" data-testid=\"about-title\">About Ramanujan Junior College</h2>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\" data-testid=\"about-description\">\n              Founded in 2005, Ramanujan Junior College stands true to its motto - \"Education, Development and Progress\" \n              with a long-cherished desire to impart quality education and pave the way for splendid careers.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n            {/* About Content */}\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-2xl font-semibold mb-4\">Our Legacy</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  Primarily started as a coaching institute named Ramanujan Academy in 2003, the institution \n                  achieved immense response from society. In 2005, Ramanujan Junior College was established, \n                  offering both Science and Arts streams.\n                </p>\n                <p className=\"text-muted-foreground\">\n                  Now operating dual services - Ramanujan Junior College and Ramanujan Academy - both are co-educational \n                  institutions committed to preparing students for competitive examinations like JEE and medical entrance tests.\n                </p>\n              </div>\n\n              <div className=\"grid sm:grid-cols-2 gap-6\">\n                <Card className=\"p-6 border\">\n                  <div className=\"text-2xl font-bold text-primary mb-2\">2003</div>\n                  <div className=\"text-sm font-medium mb-1\">Academy Founded</div>\n                  <div className=\"text-xs text-muted-foreground\">Ramanujan Academy</div>\n                </Card>\n                <Card className=\"p-6 border\">\n                  <div className=\"text-2xl font-bold text-accent mb-2\">2005</div>\n                  <div className=\"text-sm font-medium mb-1\">College Established</div>\n                  <div className=\"text-xs text-muted-foreground\">AHSEC Recognition</div>\n                </Card>\n              </div>\n            </div>\n\n            {/* College Image */}\n            <div className=\"lg:order-first\">\n              <img \n                src=\"https://images.unsplash.com/photo-1562774053-701939374585?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Ramanujan Junior College campus building\" \n                className=\"rounded-xl shadow-lg w-full h-auto\"\n                data-testid=\"college-image\"\n              />\n            </div>\n          </div>\n\n          {/* Vision, Mission, and Values */}\n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            <Card className=\"p-8 border\">\n              <div className=\"text-center mb-6\">\n                <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Eye className=\"w-8 h-8 text-primary-foreground\" />\n                </div>\n                <h3 className=\"text-xl font-semibold\">Our Motto</h3>\n              </div>\n              <p className=\"text-center text-muted-foreground\">\n                \"Education, Development and Progress\" - Our motto reflects our commitment to imparting \n                quality education and ensuring student success in competitive fields.\n              </p>\n            </Card>\n\n            <Card className=\"p-8 border\">\n              <div className=\"text-center mb-6\">\n                <div className=\"w-16 h-16 bg-accent rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Target className=\"w-8 h-8 text-accent-foreground\" />\n                </div>\n                <h3 className=\"text-xl font-semibold\">Our Focus</h3>\n              </div>\n              <p className=\"text-center text-muted-foreground\">\n                Intensive coaching by permanent qualified faculty to prepare students for JEE, Medical entrance, \n                improve employability, and nurture social responsibility.\n              </p>\n            </Card>\n\n            <Card className=\"p-8 border\">\n              <div className=\"text-center mb-6\">\n                <div className=\"w-16 h-16 bg-secondary rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Heart className=\"w-8 h-8 text-secondary-foreground\" />\n                </div>\n                <h3 className=\"text-xl font-semibold\">Values</h3>\n              </div>\n              <p className=\"text-center text-muted-foreground\">\n                Nistha (dedication), Dhriti (courage), and Satyam (truth) - These core values guide our approach \n                to education and character development.\n              </p>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Academic Programs Preview */}\n      <section className=\"py-16 bg-muted\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-4xl font-bold mb-4 font-serif\">Academic Excellence</h2>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              Explore our comprehensive range of undergraduate programs across arts, commerce, management, \n              science, and vocational streams under the Choice Based Credit System.\n            </p>\n          </div>\n\n          {/* Program Categories */}\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n            <Card className=\"p-6 border hover:shadow-lg transition-shadow\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <GraduationCap className=\"w-6 h-6 text-primary-foreground\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">Arts & Humanities</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">English, Hindi, Political Science, Philosophy, Applied Psychology</p>\n                <Link href=\"/academics\">\n                  <Button variant=\"link\" className=\"text-primary p-0 h-auto font-medium hover:underline\">\n                    Explore Programs →\n                  </Button>\n                </Link>\n              </div>\n            </Card>\n\n            <Card className=\"p-6 border hover:shadow-lg transition-shadow\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-accent rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <TrendingUp className=\"w-6 h-6 text-accent-foreground\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">Commerce</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">B.Com (Hons.), B.Com (Prog.), Business Management Studies</p>\n                <Link href=\"/academics\">\n                  <Button variant=\"link\" className=\"text-primary p-0 h-auto font-medium hover:underline\">\n                    Explore Programs →\n                  </Button>\n                </Link>\n              </div>\n            </Card>\n\n            <Card className=\"p-6 border hover:shadow-lg transition-shadow\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-secondary rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <Atom className=\"w-6 h-6 text-secondary-foreground\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">Science</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Mathematics, Statistics, Computer Science, Environmental Science</p>\n                <Link href=\"/academics\">\n                  <Button variant=\"link\" className=\"text-primary p-0 h-auto font-medium hover:underline\">\n                    Explore Programs →\n                  </Button>\n                </Link>\n              </div>\n            </Card>\n\n            <Card className=\"p-6 border hover:shadow-lg transition-shadow\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <Wrench className=\"w-6 h-6 text-primary-foreground\" />\n                </div>\n                <h3 className=\"font-semibold mb-2\">Vocational</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">B.Voc courses focused on skill development and industry readiness</p>\n                <Link href=\"/academics\">\n                  <Button variant=\"link\" className=\"text-primary p-0 h-auto font-medium hover:underline\">\n                    Explore Programs →\n                  </Button>\n                </Link>\n              </div>\n            </Card>\n          </div>\n\n          {/* Academic Resources */}\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <Card className=\"bg-primary text-primary-foreground p-8\">\n              <h3 className=\"text-xl font-semibold mb-4\">Academic Resources</h3>\n              <ul className=\"space-y-3\">\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Choice Based Credit System (CBCS)\n                </li>\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  University of Delhi Syllabus\n                </li>\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Program & Course Outcomes\n                </li>\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Regular Academic Calendar\n                </li>\n              </ul>\n              <Link href=\"/academics#calendar\">\n                <Button className=\"mt-6 bg-primary-foreground text-primary hover:bg-primary-foreground/90\">\n                  View Academic Calendar\n                </Button>\n              </Link>\n            </Card>\n\n            <Card className=\"bg-accent text-accent-foreground p-8\">\n              <h3 className=\"text-xl font-semibold mb-4\">Student Support</h3>\n              <ul className=\"space-y-3\">\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Time Tables & Schedules\n                </li>\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Academic Counseling\n                </li>\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Career Guidance\n                </li>\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"w-5 h-5 mr-3\" />\n                  Research Opportunities\n                </li>\n              </ul>\n              <Link href=\"/students\">\n                <Button className=\"mt-6 bg-accent-foreground text-accent hover:bg-accent-foreground/90\">\n                  Student Resources\n                </Button>\n              </Link>\n            </Card>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":12951},"client/src/pages/news.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n// import { Helmet } from \"react-helmet-async\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Newspaper,\n  Calendar,\n  Clock,\n  User,\n  ExternalLink,\n  Star,\n  TrendingUp,\n  Award,\n  Users,\n  BookOpen,\n  Mail,\n  ArrowRight\n} from \"lucide-react\";\nimport { News, Event } from \"@shared/schema\";\nimport { formatDistanceToNow, format } from \"date-fns\";\n\nexport default function NewsPage() {\n  const { data: news, isLoading: newsLoading } = useQuery<News[]>({\n    queryKey: [\"/api/news\"],\n  });\n\n  const { data: featuredNews, isLoading: featuredLoading } = useQuery<News[]>({\n    queryKey: [\"/api/news/featured\"],\n  });\n\n  const { data: events, isLoading: eventsLoading } = useQuery<Event[]>({\n    queryKey: [\"/api/events\"],\n  });\n\n  const pressReleases = [\n    {\n      title: \"NAAC A++ Accreditation Renewed\",\n      description: \"College maintains highest grade for excellence in education\",\n      date: \"Dec 18, 2024\"\n    },\n    {\n      title: \"New Industry Partnerships\",\n      description: \"Strategic collaborations for enhanced placement opportunities\",\n      date: \"Dec 15, 2024\"\n    },\n    {\n      title: \"Research Grant Awarded\",\n      description: \"₹50 lakhs sanctioned for environmental science project\",\n      date: \"Dec 12, 2024\"\n    }\n  ];\n\n  const upcomingEvents = events?.filter(event => new Date(event.eventDate) >= new Date()).slice(0, 5) || [];\n  const recentNews = news?.slice(0, 6) || [];\n  const featured = featuredNews?.slice(0, 1) || [];\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>News & Events - Ramanujan College | Latest Updates & Campus Activities - University of Delhi</title>\n        <meta name=\"description\" content=\"Stay updated with latest news, events, and announcements from Ramanujan College. Get information about campus activities, achievements, and important updates.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                News & Events\n              </h1>\n              <p className=\"text-xl opacity-90\" data-testid=\"page-subtitle\">\n                Stay Connected with Campus Life & Achievements\n              </p>\n            </div>\n          </div>\n        </section>\n\n        {/* Main Content */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"grid lg:grid-cols-3 gap-8\">\n              {/* Featured News & Recent Articles */}\n              <div className=\"lg:col-span-2\">\n                <Tabs defaultValue=\"news\" className=\"w-full\">\n                  <TabsList className=\"grid w-full grid-cols-2 mb-8\" data-testid=\"news-tabs\">\n                    <TabsTrigger value=\"news\" data-testid=\"tab-news\">Latest News</TabsTrigger>\n                    <TabsTrigger value=\"featured\" data-testid=\"tab-featured\">Featured</TabsTrigger>\n                  </TabsList>\n\n                  <TabsContent value=\"news\">\n                    <div className=\"space-y-6\">\n                      <h2 className=\"text-2xl font-bold font-serif\" data-testid=\"latest-news-title\">Latest News</h2>\n                      \n                      {newsLoading ? (\n                        <div className=\"space-y-6\">\n                          {[...Array(3)].map((_, i) => (\n                            <Card key={i} className=\"overflow-hidden\">\n                              <div className=\"md:flex\">\n                                <Skeleton className=\"h-48 md:w-48 md:h-auto\" />\n                                <div className=\"p-6 flex-1\">\n                                  <Skeleton className=\"h-4 w-3/4 mb-4\" />\n                                  <Skeleton className=\"h-6 w-full mb-2\" />\n                                  <Skeleton className=\"h-4 w-2/3 mb-4\" />\n                                  <Skeleton className=\"h-3 w-1/2\" />\n                                </div>\n                              </div>\n                            </Card>\n                          ))}\n                        </div>\n                      ) : (\n                        <div className=\"space-y-6\">\n                          {recentNews.length > 0 ? (\n                            recentNews.map((article, index) => (\n                              <Card key={article.id} className=\"overflow-hidden hover:shadow-lg transition-shadow\" data-testid={`news-article-${index}`}>\n                                <div className=\"md:flex\">\n                                  {article.imageUrl && (\n                                    <div className=\"md:w-48 h-48 md:h-auto bg-muted\">\n                                      <img \n                                        src={article.imageUrl} \n                                        alt={article.title}\n                                        className=\"w-full h-full object-cover\"\n                                      />\n                                    </div>\n                                  )}\n                                  <div className=\"p-6 flex-1\">\n                                    <div className=\"flex items-center gap-2 mb-3\">\n                                      <Badge variant=\"outline\" data-testid={`news-category-${index}`}>\n                                        {article.category}\n                                      </Badge>\n                                      {article.featured && (\n                                        <Badge className=\"bg-accent text-accent-foreground\" data-testid={`news-featured-${index}`}>\n                                          <Star className=\"w-3 h-3 mr-1\" />\n                                          Featured\n                                        </Badge>\n                                      )}\n                                    </div>\n                                    <h3 className=\"text-xl font-semibold mb-3\">{article.title}</h3>\n                                    <p className=\"text-muted-foreground mb-4\">{article.excerpt}</p>\n                                    <div className=\"flex items-center justify-between\">\n                                      <div className=\"flex items-center text-sm text-muted-foreground\">\n                                        <User className=\"w-4 h-4 mr-1\" />\n                                        <span className=\"mr-3\">{article.author}</span>\n                                        <Clock className=\"w-4 h-4 mr-1\" />\n                                        <span>\n                                          {article.publishedAt && formatDistanceToNow(new Date(article.publishedAt), { addSuffix: true })}\n                                        </span>\n                                      </div>\n                                      <Button variant=\"link\" className=\"p-0 h-auto text-primary\" data-testid={`read-more-${index}`}>\n                                        Read More\n                                        <ArrowRight className=\"w-4 h-4 ml-1\" />\n                                      </Button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </Card>\n                            ))\n                          ) : (\n                            <Card className=\"p-12 text-center\">\n                              <Newspaper className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                              <h3 className=\"text-xl font-semibold mb-2\">No News Available</h3>\n                              <p className=\"text-muted-foreground\">\n                                Check back later for the latest news and updates.\n                              </p>\n                            </Card>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"featured\">\n                    <div className=\"space-y-6\">\n                      <h2 className=\"text-2xl font-bold font-serif\" data-testid=\"featured-news-title\">Featured Stories</h2>\n                      \n                      {featuredLoading ? (\n                        <Card className=\"overflow-hidden\">\n                          <Skeleton className=\"h-64 w-full\" />\n                          <div className=\"p-6\">\n                            <Skeleton className=\"h-4 w-1/4 mb-4\" />\n                            <Skeleton className=\"h-8 w-3/4 mb-4\" />\n                            <Skeleton className=\"h-4 w-full mb-2\" />\n                            <Skeleton className=\"h-4 w-2/3\" />\n                          </div>\n                        </Card>\n                      ) : (\n                        <>\n                          {featured.length > 0 ? (\n                            featured.map((article, index) => (\n                              <Card key={article.id} className=\"overflow-hidden shadow-lg\" data-testid={`featured-article-${index}`}>\n                                {article.imageUrl && (\n                                  <div className=\"h-64 bg-muted\">\n                                    <img \n                                      src={article.imageUrl} \n                                      alt={article.title}\n                                      className=\"w-full h-full object-cover\"\n                                    />\n                                  </div>\n                                )}\n                                <div className=\"p-6\">\n                                  <div className=\"flex items-center gap-2 mb-3\">\n                                    <Badge className=\"bg-accent text-accent-foreground\">\n                                      <Star className=\"w-3 h-3 mr-1\" />\n                                      Featured\n                                    </Badge>\n                                    <Badge variant=\"outline\">{article.category}</Badge>\n                                  </div>\n                                  <h3 className=\"text-2xl font-bold mb-4\">{article.title}</h3>\n                                  <p className=\"text-muted-foreground mb-6\">{article.excerpt}</p>\n                                  <div className=\"flex items-center justify-between\">\n                                    <div className=\"flex items-center text-sm text-muted-foreground\">\n                                      <User className=\"w-4 h-4 mr-1\" />\n                                      <span className=\"mr-3\">{article.author}</span>\n                                      <Clock className=\"w-4 h-4 mr-1\" />\n                                      <span>\n                                        {article.publishedAt && format(new Date(article.publishedAt), 'MMM dd, yyyy')}\n                                      </span>\n                                    </div>\n                                    <Button data-testid={`read-featured-${index}`}>\n                                      Read Full Story\n                                      <ArrowRight className=\"w-4 h-4 ml-2\" />\n                                    </Button>\n                                  </div>\n                                </div>\n                              </Card>\n                            ))\n                          ) : (\n                            <Card className=\"p-12 text-center\">\n                              <Star className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                              <h3 className=\"text-xl font-semibold mb-2\">No Featured Stories</h3>\n                              <p className=\"text-muted-foreground\">\n                                Featured stories will appear here when available.\n                              </p>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  </TabsContent>\n                </Tabs>\n              </div>\n\n              {/* Sidebar */}\n              <div className=\"space-y-8\">\n                {/* Upcoming Events */}\n                <Card className=\"overflow-hidden\" id=\"events\">\n                  <CardHeader className=\"bg-accent text-accent-foreground\">\n                    <CardTitle className=\"flex items-center\">\n                      <Calendar className=\"w-5 h-5 mr-2\" />\n                      Upcoming Events\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <div className=\"max-h-80 overflow-y-auto\" data-testid=\"upcoming-events\">\n                      {eventsLoading ? (\n                        <div className=\"p-6 space-y-4\">\n                          {[...Array(3)].map((_, i) => (\n                            <div key={i} className=\"flex items-start space-x-3\">\n                              <Skeleton className=\"w-12 h-12 rounded\" />\n                              <div className=\"flex-1\">\n                                <Skeleton className=\"h-4 w-3/4 mb-2\" />\n                                <Skeleton className=\"h-3 w-1/2\" />\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <>\n                          {upcomingEvents.length > 0 ? (\n                            <div className=\"p-6 space-y-4\">\n                              {upcomingEvents.map((event, index) => (\n                                <div key={event.id} className=\"flex items-start space-x-3\" data-testid={`upcoming-event-${index}`}>\n                                  <div className=\"bg-primary text-primary-foreground rounded p-2 text-xs font-bold text-center min-w-[50px]\">\n                                    <div>{format(new Date(event.eventDate), 'MMM').toUpperCase()}</div>\n                                    <div>{format(new Date(event.eventDate), 'dd')}</div>\n                                  </div>\n                                  <div>\n                                    <h4 className=\"font-semibold text-sm\">{event.title}</h4>\n                                    <p className=\"text-xs text-muted-foreground\">{event.location}</p>\n                                    <p className=\"text-xs text-muted-foreground mt-1\">{event.description}</p>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          ) : (\n                            <div className=\"p-6 text-center text-muted-foreground\">\n                              <Calendar className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n                              <p className=\"text-sm\">No upcoming events at this time.</p>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                    <div className=\"px-6 py-4 bg-muted\">\n                      <Button variant=\"link\" className=\"text-primary font-semibold text-sm p-0 h-auto\" data-testid=\"view-all-events\">\n                        View All Events →\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Press Releases */}\n                <Card className=\"overflow-hidden\">\n                  <CardHeader className=\"bg-secondary text-secondary-foreground\">\n                    <CardTitle className=\"flex items-center\">\n                      <Newspaper className=\"w-5 h-5 mr-2\" />\n                      Press Releases\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <div className=\"max-h-80 overflow-y-auto\" data-testid=\"press-releases\">\n                      <div className=\"p-6 space-y-4\">\n                        {pressReleases.map((release, index) => (\n                          <div key={release.title} className=\"border-l-4 border-primary pl-4\" data-testid={`press-release-${index}`}>\n                            <h4 className=\"font-semibold text-sm mb-1\">{release.title}</h4>\n                            <p className=\"text-xs text-muted-foreground mb-1\">{release.description}</p>\n                            <p className=\"text-xs text-muted-foreground\">{release.date}</p>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"px-6 py-4 bg-muted\">\n                      <Button variant=\"link\" className=\"text-primary font-semibold text-sm p-0 h-auto\" data-testid=\"view-all-releases\">\n                        View All Releases →\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Quick Stats */}\n                <Card className=\"p-6\">\n                  <CardTitle className=\"mb-4\">Campus Highlights</CardTitle>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <TrendingUp className=\"w-4 h-4 mr-2 text-primary\" />\n                        <span className=\"text-sm\">NIRF Ranking</span>\n                      </div>\n                      <Badge variant=\"outline\">65th (2024)</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <Award className=\"w-4 h-4 mr-2 text-accent\" />\n                        <span className=\"text-sm\">NAAC Grade</span>\n                      </div>\n                      <Badge className=\"bg-accent text-accent-foreground\">A++</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <Users className=\"w-4 h-4 mr-2 text-secondary\" />\n                        <span className=\"text-sm\">Students</span>\n                      </div>\n                      <Badge variant=\"outline\">2000+</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <BookOpen className=\"w-4 h-4 mr-2 text-primary\" />\n                        <span className=\"text-sm\">Programs</span>\n                      </div>\n                      <Badge variant=\"outline\">16+</Badge>\n                    </div>\n                  </div>\n                </Card>\n\n                {/* Newsletter Signup */}\n                <Card className=\"p-6 bg-gradient-to-br from-primary/10 to-accent/10\">\n                  <CardHeader className=\"p-0 mb-4\">\n                    <CardTitle className=\"flex items-center text-lg\">\n                      <Mail className=\"w-5 h-5 mr-2 text-primary\" />\n                      Stay Connected\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      Subscribe to our newsletter for the latest updates and announcements.\n                    </p>\n                    <div className=\"space-y-3\">\n                      <input \n                        type=\"email\" \n                        placeholder=\"Enter your email\" \n                        className=\"w-full px-4 py-2 rounded-lg border border-input bg-background text-foreground focus:ring-2 focus:ring-primary focus:border-primary\"\n                        data-testid=\"newsletter-email\"\n                      />\n                      <Button className=\"w-full\" data-testid=\"newsletter-subscribe\">\n                        Subscribe\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Archives & Categories */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"archives-title\">\n                News Archives & Categories\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Browse news by category or explore our archives\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <TrendingUp className=\"w-12 h-12 mx-auto mb-4 text-primary\" />\n                <h3 className=\"font-semibold mb-2\">Academic News</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Academic achievements and updates</p>\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"academic-news\">\n                  Browse\n                </Button>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <Users className=\"w-12 h-12 mx-auto mb-4 text-accent\" />\n                <h3 className=\"font-semibold mb-2\">Student Life</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Campus activities and events</p>\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"student-life-news\">\n                  Browse\n                </Button>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <Award className=\"w-12 h-12 mx-auto mb-4 text-secondary\" />\n                <h3 className=\"font-semibold mb-2\">Achievements</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Awards and recognitions</p>\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"achievements-news\">\n                  Browse\n                </Button>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                <BookOpen className=\"w-12 h-12 mx-auto mb-4 text-primary\" />\n                <h3 className=\"font-semibold mb-2\">Research</h3>\n                <p className=\"text-sm text-muted-foreground mb-4\">Research news and publications</p>\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"research-news\">\n                  Browse\n                </Button>\n              </Card>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n","size_bytes":23069},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/research.tsx":{"content":"// import { Helmet } from \"react-helmet-async\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  FlaskConical,\n  Users,\n  Award,\n  BookOpen,\n  TrendingUp,\n  Lightbulb,\n  Target,\n  CheckCircle,\n  ExternalLink,\n  FileText,\n  Microscope,\n  Cpu,\n  Leaf,\n  Globe,\n  Heart,\n  Scale,\n  Building,\n  Smartphone\n} from \"lucide-react\";\n\nexport default function Research() {\n  const researchCentres = [\n    {\n      name: \"Centre for Robotics & AI\",\n      description: \"Advancing artificial intelligence and robotics research with practical applications\",\n      icon: Cpu,\n      established: 2018,\n      focus: \"AI, Machine Learning, Robotics\"\n    },\n    {\n      name: \"Social Innovation Centre\",\n      description: \"Community-focused research initiatives addressing social challenges\",\n      icon: Heart,\n      established: 2019,\n      focus: \"Social Impact, Community Development\"\n    },\n    {\n      name: \"Centre for Ethics\",\n      description: \"Research in applied ethics and moral philosophy\",\n      icon: Scale,\n      established: 2015,\n      focus: \"Ethics, Philosophy, Moral Studies\"\n    },\n    {\n      name: \"Entrepreneurship Cell\",\n      description: \"Supporting innovation and startup culture through research\",\n      icon: Lightbulb,\n      established: 2017,\n      focus: \"Innovation, Startups, Business Development\"\n    },\n    {\n      name: \"Environmental Research Centre\",\n      description: \"Sustainability and environmental science research\",\n      icon: Leaf,\n      established: 2016,\n      focus: \"Environmental Science, Sustainability\"\n    },\n    {\n      name: \"Human Rights Centre\",\n      description: \"Legal and social research on human rights issues\",\n      icon: Users,\n      established: 2014,\n      focus: \"Human Rights, Legal Studies\"\n    }\n  ];\n\n  const researchAreas = [\n    {\n      title: \"Computer Science & Technology\",\n      description: \"Artificial Intelligence, Machine Learning, Data Science, Cybersecurity\",\n      icon: Smartphone,\n      projects: \"15+ Active Projects\"\n    },\n    {\n      title: \"Environmental Sciences\",\n      description: \"Climate Change, Sustainability, Pollution Control, Green Technology\",\n      icon: Leaf,\n      projects: \"12+ Active Projects\"\n    },\n    {\n      title: \"Social Sciences\",\n      description: \"Public Policy, Human Rights, Political Science, Psychology\",\n      icon: Users,\n      projects: \"20+ Active Projects\"\n    },\n    {\n      title: \"Mathematics & Statistics\",\n      description: \"Applied Mathematics, Statistical Analysis, Data Modeling\",\n      icon: Target,\n      projects: \"8+ Active Projects\"\n    },\n    {\n      title: \"Commerce & Management\",\n      description: \"Financial Markets, Entrepreneurship, Digital Commerce\",\n      icon: TrendingUp,\n      projects: \"10+ Active Projects\"\n    },\n    {\n      title: \"Applied Psychology\",\n      description: \"Behavioral Studies, Mental Health, Cognitive Research\",\n      icon: Heart,\n      projects: \"6+ Active Projects\"\n    }\n  ];\n\n  const achievements = [\n    {\n      title: \"Research Publications\",\n      value: \"150+\",\n      description: \"Peer-reviewed publications in national and international journals\"\n    },\n    {\n      title: \"Research Grants\",\n      value: \"₹2.5 Cr\",\n      description: \"Total research funding secured from various agencies\"\n    },\n    {\n      title: \"Active Projects\",\n      value: \"25+\",\n      description: \"Ongoing research projects across departments\"\n    },\n    {\n      title: \"Research Scholars\",\n      value: \"40+\",\n      description: \"Faculty and students involved in research activities\"\n    }\n  ];\n\n  const facilities = [\n    {\n      title: \"Research Labs\",\n      items: [\"Robotics & AI Lab\", \"Psychology Research Lab\", \"Environmental Science Lab\", \"Computer Science Labs\"]\n    },\n    {\n      title: \"Digital Infrastructure\",\n      items: [\"High-speed Internet\", \"Digital Library Access\", \"Research Databases\", \"Statistical Software\"]\n    },\n    {\n      title: \"Collaboration Network\",\n      items: [\"Industry Partnerships\", \"Academic Collaborations\", \"International Linkages\", \"Alumni Network\"]\n    }\n  ];\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Research & Innovation - Ramanujan College | Academic Research Centers - University of Delhi</title>\n        <meta name=\"description\" content=\"Explore cutting-edge research at Ramanujan College with 17 research centres, active projects in AI, environmental science, social innovation, and more. Join our research community.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                Research & Innovation\n              </h1>\n              <p className=\"text-xl opacity-90 mb-6\" data-testid=\"page-subtitle\">\n                Advancing Knowledge Through Cutting-Edge Research\n              </p>\n              <div className=\"flex flex-wrap justify-center gap-4\">\n                <Badge className=\"bg-accent text-accent-foreground px-4 py-2\" data-testid=\"centres-badge\">\n                  17 Research Centres\n                </Badge>\n                <Badge className=\"bg-secondary text-secondary-foreground px-4 py-2\" data-testid=\"projects-badge\">\n                  25+ Active Projects\n                </Badge>\n                <Badge className=\"bg-accent text-accent-foreground px-4 py-2\" data-testid=\"publications-badge\">\n                  150+ Publications\n                </Badge>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Research Overview */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"overview-title\">\n                Research Excellence\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n                Ramanujan College is committed to fostering a vibrant research culture that addresses \n                contemporary challenges and contributes to the advancement of knowledge across disciplines.\n              </p>\n            </div>\n\n            <div className=\"grid lg:grid-cols-2 gap-8 items-center mb-16\">\n              <div>\n                <h3 className=\"text-2xl font-semibold mb-6\">Our Research Philosophy</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start\">\n                    <CheckCircle className=\"w-6 h-6 mr-3 mt-1 text-primary flex-shrink-0\" />\n                    <div>\n                      <h4 className=\"font-semibold mb-1\">Interdisciplinary Approach</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Encouraging collaboration across departments for comprehensive research solutions\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <CheckCircle className=\"w-6 h-6 mr-3 mt-1 text-primary flex-shrink-0\" />\n                    <div>\n                      <h4 className=\"font-semibold mb-1\">Social Impact</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Focusing on research that addresses real-world problems and benefits society\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <CheckCircle className=\"w-6 h-6 mr-3 mt-1 text-primary flex-shrink-0\" />\n                    <div>\n                      <h4 className=\"font-semibold mb-1\">Innovation & Technology</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Leveraging cutting-edge technology for advanced research methodologies\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start\">\n                    <CheckCircle className=\"w-6 h-6 mr-3 mt-1 text-primary flex-shrink-0\" />\n                    <div>\n                      <h4 className=\"font-semibold mb-1\">Student Participation</h4>\n                      <p className=\"text-muted-foreground text-sm\">\n                        Involving undergraduate students in research activities and projects\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <img \n                  src=\"https://images.unsplash.com/photo-1532094349884-543bc11b234d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Research laboratory\" \n                  className=\"rounded-xl shadow-lg w-full\"\n                  data-testid=\"research-image\"\n                />\n              </div>\n            </div>\n\n            {/* Research Achievements */}\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {achievements.map((achievement, index) => (\n                <Card key={achievement.title} className=\"p-6 text-center hover:shadow-lg transition-shadow\" data-testid={`achievement-${index}`}>\n                  <h3 className=\"text-3xl font-bold text-primary mb-2\">{achievement.value}</h3>\n                  <h4 className=\"font-semibold mb-2\">{achievement.title}</h4>\n                  <p className=\"text-sm text-muted-foreground\">{achievement.description}</p>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Research Centres */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"centres-title\">\n                Research Centres & Cells\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                17 specialized centres driving innovation and research excellence\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {researchCentres.map((centre, index) => (\n                <Card key={centre.name} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`centre-${index}`}>\n                  <CardHeader className=\"p-0 pb-4\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center\">\n                        <centre.icon className=\"w-6 h-6 text-primary-foreground\" />\n                      </div>\n                      <Badge variant=\"outline\">Est. {centre.established}</Badge>\n                    </div>\n                    <CardTitle className=\"text-lg\">{centre.name}</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <p className=\"text-muted-foreground mb-4\">{centre.description}</p>\n                    <div className=\"text-sm\">\n                      <span className=\"font-semibold\">Focus Areas:</span>\n                      <span className=\"text-muted-foreground ml-2\">{centre.focus}</span>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Research Areas */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"areas-title\">\n                Key Research Areas\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Diverse research domains addressing contemporary challenges\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {researchAreas.map((area, index) => (\n                <Card key={area.title} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`research-area-${index}`}>\n                  <CardHeader className=\"p-0 pb-4\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <div className=\"w-12 h-12 bg-accent rounded-lg flex items-center justify-center\">\n                        <area.icon className=\"w-6 h-6 text-accent-foreground\" />\n                      </div>\n                      <Badge variant=\"secondary\">{area.projects}</Badge>\n                    </div>\n                    <CardTitle className=\"text-lg\">{area.title}</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <p className=\"text-muted-foreground\">{area.description}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Research Facilities */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"facilities-title\">\n                Research Infrastructure\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                State-of-the-art facilities supporting cutting-edge research\n              </p>\n            </div>\n\n            <div className=\"grid lg:grid-cols-3 gap-8\">\n              {facilities.map((facility, index) => (\n                <Card key={facility.title} className=\"p-8\" data-testid={`facility-${index}`}>\n                  <CardHeader className=\"p-0 pb-6\">\n                    <CardTitle className=\"flex items-center text-xl\">\n                      <FlaskConical className=\"w-6 h-6 mr-2 text-primary\" />\n                      {facility.title}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <ul className=\"space-y-3\">\n                      {facility.items.map((item, itemIndex) => (\n                        <li key={item} className=\"flex items-start\" data-testid={`facility-item-${index}-${itemIndex}`}>\n                          <CheckCircle className=\"w-4 h-4 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                          <span className=\"text-sm\">{item}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Research Opportunities */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"opportunities-title\">\n                Research Opportunities\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Get involved in research activities and contribute to knowledge creation\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"flex items-center text-2xl\">\n                    <Users className=\"w-6 h-6 mr-2 text-primary\" />\n                    For Students\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <ul className=\"space-y-4\">\n                    <li className=\"flex items-start\">\n                      <Award className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">Research Internships</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Participate in ongoing research projects during summer breaks\n                        </p>\n                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <BookOpen className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">Dissertation Projects</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Work on research-based projects as part of your curriculum\n                        </p>\n                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <Lightbulb className=\"w-5 h-5 mr-3 mt-0.5 text-primary flex-shrink-0\" />\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">Innovation Challenges</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Participate in research competitions and innovation contests\n                        </p>\n                      </div>\n                    </li>\n                  </ul>\n                  <Button className=\"mt-6 w-full\" data-testid=\"student-research\">\n                    Explore Student Research\n                  </Button>\n                </CardContent>\n              </Card>\n\n              <Card className=\"p-8\">\n                <CardHeader className=\"p-0 mb-6\">\n                  <CardTitle className=\"flex items-center text-2xl\">\n                    <Microscope className=\"w-6 h-6 mr-2 text-accent\" />\n                    For Faculty\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <ul className=\"space-y-4\">\n                    <li className=\"flex items-start\">\n                      <TrendingUp className=\"w-5 h-5 mr-3 mt-0.5 text-accent flex-shrink-0\" />\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">Research Grants</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Access funding opportunities from various government agencies\n                        </p>\n                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <Globe className=\"w-5 h-5 mr-3 mt-0.5 text-accent flex-shrink-0\" />\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">Collaborative Research</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Partner with national and international institutions\n                        </p>\n                      </div>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <FileText className=\"w-5 h-5 mr-3 mt-0.5 text-accent flex-shrink-0\" />\n                      <div>\n                        <h4 className=\"font-semibold mb-1\">Publication Support</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Institutional support for research publications and conferences\n                        </p>\n                      </div>\n                    </li>\n                  </ul>\n                  <Button variant=\"outline\" className=\"mt-6 w-full\" data-testid=\"faculty-research\">\n                    Faculty Research Portal\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Research Publications & Recognition */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"publications-title\">\n                Publications & Recognition\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Our research contributes to global knowledge and receives international recognition\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <Card className=\"p-8 text-center\">\n                <BookOpen className=\"w-16 h-16 mx-auto mb-4 text-primary\" />\n                <h3 className=\"text-xl font-semibold mb-4\">Recent Publications</h3>\n                <p className=\"text-muted-foreground mb-6\">\n                  Browse our latest research publications in peer-reviewed journals and conferences.\n                </p>\n                <Button variant=\"outline\" data-testid=\"view-publications\">\n                  <ExternalLink className=\"w-4 h-4 mr-2\" />\n                  View Publications\n                </Button>\n              </Card>\n\n              <Card className=\"p-8 text-center\">\n                <Award className=\"w-16 h-16 mx-auto mb-4 text-accent\" />\n                <h3 className=\"text-xl font-semibold mb-4\">Awards & Recognition</h3>\n                <p className=\"text-muted-foreground mb-6\">\n                  Our faculty and students have received numerous awards for their research contributions.\n                </p>\n                <Button variant=\"outline\" data-testid=\"view-awards\">\n                  <ExternalLink className=\"w-4 h-4 mr-2\" />\n                  View Awards\n                </Button>\n              </Card>\n\n              <Card className=\"p-8 text-center\">\n                <Building className=\"w-16 h-16 mx-auto mb-4 text-secondary\" />\n                <h3 className=\"text-xl font-semibold mb-4\">Industry Partnerships</h3>\n                <p className=\"text-muted-foreground mb-6\">\n                  Collaborations with industry leaders for applied research and innovation.\n                </p>\n                <Button variant=\"outline\" data-testid=\"view-partnerships\">\n                  <ExternalLink className=\"w-4 h-4 mr-2\" />\n                  View Partnerships\n                </Button>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* Contact Research */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              <Card className=\"p-8 bg-gradient-to-r from-primary/10 to-accent/10\">\n                <div className=\"text-center\">\n                  <h3 className=\"text-3xl font-bold mb-4\">Join Our Research Community</h3>\n                  <p className=\"text-lg text-muted-foreground mb-8\">\n                    Whether you're a student interested in research or a faculty member looking to collaborate, \n                    we welcome you to be part of our vibrant research ecosystem.\n                  </p>\n                  <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\n                    <Button data-testid=\"contact-research\">\n                      Contact Research Office\n                    </Button>\n                    <Button variant=\"outline\" data-testid=\"research-policies\">\n                      Research Policies\n                    </Button>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n","size_bytes":23519},"client/src/pages/students.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\n// import { Helmet } from \"react-helmet-async\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Calendar,\n  Clock,\n  BookOpen,\n  Download,\n  Users,\n  Shield,\n  Heart,\n  Music,\n  Palette,\n  Camera,\n  Mic,\n  Trophy,\n  FlaskConical,\n  Briefcase,\n  FileText,\n  ExternalLink,\n  CheckCircle,\n  Newspaper,\n  Library,\n  GraduationCap\n} from \"lucide-react\";\nimport { Notice } from \"@shared/schema\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nexport default function Students() {\n  const { data: notices, isLoading: noticesLoading } = useQuery<Notice[]>({\n    queryKey: [\"/api/notices\"],\n  });\n\n  const societies = [\n    { name: \"NSS\", description: \"National Service Scheme\", icon: Users, category: \"Service\" },\n    { name: \"NCC\", description: \"National Cadet Corps\", icon: Shield, category: \"Service\" },\n    { name: \"Debating Society\", description: \"Public speaking & debates\", icon: Mic, category: \"Literary\" },\n    { name: \"Theatre Society\", description: \"Drama & performing arts\", icon: Palette, category: \"Cultural\" },\n    { name: \"Music Society\", description: \"Musical performances\", icon: Music, category: \"Cultural\" },\n    { name: \"Dance Society\", description: \"Classical & contemporary\", icon: Users, category: \"Cultural\" },\n    { name: \"Fine Arts\", description: \"Visual arts & creativity\", icon: Palette, category: \"Cultural\" },\n    { name: \"Film Society\", description: \"Cinema & media arts\", icon: Camera, category: \"Cultural\" },\n  ];\n\n  const centres = [\n    { name: \"Centre for Ethics\", description: \"Promoting ethical values and moral education\" },\n    { name: \"Human Rights Centre\", description: \"Awareness and advocacy programs\" },\n    { name: \"Entrepreneurship Cell\", description: \"Supporting student startups and innovation\" },\n    { name: \"Robotics & AI Centre\", description: \"Cutting-edge technology research\" },\n    { name: \"Social Innovation Centre\", description: \"Community-focused research initiatives\" },\n  ];\n\n  const supportServices = [\n    {\n      title: \"Academic Counseling\",\n      description: \"Guidance for course selection and academic planning\",\n      icon: GraduationCap\n    },\n    {\n      title: \"Placement Cell\",\n      description: \"Career guidance and job placement assistance\",\n      icon: Briefcase\n    },\n    {\n      title: \"Student Welfare\",\n      description: \"Comprehensive support for student well-being\",\n      icon: Heart\n    },\n    {\n      title: \"Anti-Ragging\",\n      description: \"Safe and secure campus environment\",\n      icon: Shield\n    }\n  ];\n\n  const resources = [\n    {\n      title: \"Academic Resources\",\n      items: [\"Time Tables & Schedules\", \"Academic Calendar\", \"Examination Guidelines\", \"Rules & Regulations\"],\n      color: \"primary\",\n      icon: Calendar\n    },\n    {\n      title: \"Downloads Center\",\n      items: [\"Application Forms\", \"Student Handbooks\", \"Annual Reports\", \"Policy Documents\"],\n      color: \"accent\",\n      icon: Download\n    },\n    {\n      title: \"Library Services\",\n      items: [\"Online Catalog\", \"E-Resources Access\", \"Digital Collections\", \"Research Support\"],\n      color: \"secondary\",\n      icon: Library\n    }\n  ];\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Student Life - Ramanujan College | Resources, Societies & Support Services - University of Delhi</title>\n        <meta name=\"description\" content=\"Explore vibrant student life at Ramanujan College with 15 student societies, 17 centres & cells, comprehensive support services, and academic resources for holistic development.\" />\n      </Helmet> */}\n\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"py-16 bg-primary text-primary-foreground\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl md:text-5xl font-bold mb-4 font-serif\" data-testid=\"page-title\">\n                Vibrant Student Life\n              </h1>\n              <p className=\"text-xl opacity-90\" data-testid=\"page-subtitle\">\n                Beyond Academics - Holistic Development & Growth\n              </p>\n              <div className=\"flex flex-wrap justify-center gap-4 mt-6\">\n                <Badge className=\"bg-accent text-accent-foreground px-4 py-2\" data-testid=\"societies-badge\">\n                  15 Student Societies\n                </Badge>\n                <Badge className=\"bg-secondary text-secondary-foreground px-4 py-2\" data-testid=\"centres-badge\">\n                  17 Centres & Cells\n                </Badge>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Student Resources Navigation */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <Tabs defaultValue=\"notices\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-6 mb-8\" data-testid=\"tabs-list\">\n                <TabsTrigger value=\"notices\" data-testid=\"tab-notices\">Notices</TabsTrigger>\n                <TabsTrigger value=\"timetables\" data-testid=\"tab-timetables\">Timetables</TabsTrigger>\n                <TabsTrigger value=\"societies\" data-testid=\"tab-societies\">Societies</TabsTrigger>\n                <TabsTrigger value=\"centres\" data-testid=\"tab-centres\">Centres</TabsTrigger>\n                <TabsTrigger value=\"placement\" data-testid=\"tab-placement\">Placement</TabsTrigger>\n                <TabsTrigger value=\"library\" data-testid=\"tab-library\">Library</TabsTrigger>\n              </TabsList>\n\n              {/* Notices & Updates */}\n              <TabsContent value=\"notices\" id=\"notices\">\n                <div className=\"space-y-8\">\n                  <div className=\"text-center\">\n                    <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"notices-title\">\n                      Latest Notices & Updates\n                    </h2>\n                    <p className=\"text-lg text-muted-foreground\">\n                      Stay informed with the latest announcements and important information\n                    </p>\n                  </div>\n\n                  {noticesLoading ? (\n                    <div className=\"grid gap-4\">\n                      {[...Array(5)].map((_, i) => (\n                        <Card key={i} className=\"p-6\">\n                          <div className=\"h-4 bg-muted-foreground/20 rounded animate-pulse mb-2\"></div>\n                          <div className=\"h-3 bg-muted-foreground/20 rounded animate-pulse w-2/3\"></div>\n                        </Card>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {notices && notices.length > 0 ? (\n                        notices.map((notice, index) => (\n                          <Card key={notice.id} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`notice-card-${index}`}>\n                            <div className=\"flex items-start justify-between\">\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center gap-2 mb-2\">\n                                  <h3 className=\"text-lg font-semibold\">{notice.title}</h3>\n                                  <Badge \n                                    variant={notice.priority === 'high' ? 'destructive' : notice.priority === 'medium' ? 'default' : 'outline'}\n                                    data-testid={`notice-priority-${index}`}\n                                  >\n                                    {notice.priority}\n                                  </Badge>\n                                  {notice.category && (\n                                    <Badge variant=\"secondary\" data-testid={`notice-category-${index}`}>\n                                      {notice.category}\n                                    </Badge>\n                                  )}\n                                </div>\n                                <p className=\"text-muted-foreground mb-2\">{notice.content}</p>\n                                {notice.publishedAt && (\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    Published {formatDistanceToNow(new Date(notice.publishedAt), { addSuffix: true })}\n                                  </p>\n                                )}\n                              </div>\n                              <Newspaper className=\"w-6 h-6 text-muted-foreground flex-shrink-0 ml-4\" />\n                            </div>\n                          </Card>\n                        ))\n                      ) : (\n                        <Card className=\"p-12 text-center\">\n                          <Newspaper className=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" />\n                          <h3 className=\"text-xl font-semibold mb-2\">No Notices Available</h3>\n                          <p className=\"text-muted-foreground\">\n                            Check back later for the latest notices and updates.\n                          </p>\n                        </Card>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </TabsContent>\n\n              {/* Timetables */}\n              <TabsContent value=\"timetables\" id=\"timetables\">\n                <div className=\"space-y-8\">\n                  <div className=\"text-center\">\n                    <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"timetables-title\">\n                      Academic Timetables\n                    </h2>\n                    <p className=\"text-lg text-muted-foreground\">\n                      Access class schedules and academic calendar information\n                    </p>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                      <Clock className=\"w-12 h-12 mx-auto mb-4 text-primary\" />\n                      <h3 className=\"font-semibold mb-2\">Semester Timetables</h3>\n                      <p className=\"text-sm text-muted-foreground mb-4\">Current semester class schedules for all programs</p>\n                      <Button variant=\"outline\" data-testid=\"view-semester-timetables\">\n                        View Timetables\n                      </Button>\n                    </Card>\n\n                    <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                      <Calendar className=\"w-12 h-12 mx-auto mb-4 text-accent\" />\n                      <h3 className=\"font-semibold mb-2\">Academic Calendar</h3>\n                      <p className=\"text-sm text-muted-foreground mb-4\">Important academic dates and holidays</p>\n                      <Button variant=\"outline\" data-testid=\"view-academic-calendar\">\n                        View Calendar\n                      </Button>\n                    </Card>\n\n                    <Card className=\"p-6 text-center hover:shadow-lg transition-shadow\">\n                      <FileText className=\"w-12 h-12 mx-auto mb-4 text-secondary\" />\n                      <h3 className=\"font-semibold mb-2\">Examination Schedule</h3>\n                      <p className=\"text-sm text-muted-foreground mb-4\">Mid-term and end-semester exam schedules</p>\n                      <Button variant=\"outline\" data-testid=\"view-exam-schedule\">\n                        View Schedule\n                      </Button>\n                    </Card>\n                  </div>\n                </div>\n              </TabsContent>\n\n              {/* Student Societies */}\n              <TabsContent value=\"societies\">\n                <div className=\"space-y-8\">\n                  <div className=\"text-center\">\n                    <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"societies-title\">\n                      Student Societies\n                    </h2>\n                    <p className=\"text-lg text-muted-foreground\">\n                      Join our 15 active student societies and explore your interests\n                    </p>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    {societies.map((society, index) => (\n                      <Card key={society.name} className=\"p-6 text-center hover:shadow-lg transition-shadow\" data-testid={`society-${index}`}>\n                        <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center mx-auto mb-4\">\n                          <society.icon className=\"w-6 h-6 text-primary-foreground\" />\n                        </div>\n                        <h3 className=\"font-semibold mb-2\">{society.name}</h3>\n                        <Badge variant=\"outline\" className=\"mb-3\">{society.category}</Badge>\n                        <p className=\"text-sm text-muted-foreground\">{society.description}</p>\n                      </Card>\n                    ))}\n                  </div>\n\n                  <Card className=\"p-8 bg-gradient-to-r from-primary/10 to-accent/10\">\n                    <div className=\"text-center\">\n                      <h3 className=\"text-2xl font-semibold mb-4\">Join a Society</h3>\n                      <p className=\"text-muted-foreground mb-6\">\n                        Enhance your college experience by joining societies that match your interests and talents.\n                        Develop leadership skills, make lifelong friendships, and contribute to campus life.\n                      </p>\n                      <Button data-testid=\"join-societies\">\n                        Learn More About Societies\n                      </Button>\n                    </div>\n                  </Card>\n                </div>\n              </TabsContent>\n\n              {/* Research Centres */}\n              <TabsContent value=\"centres\">\n                <div className=\"space-y-8\">\n                  <div className=\"text-center\">\n                    <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"centres-title\">\n                      Centres & Cells\n                    </h2>\n                    <p className=\"text-lg text-muted-foreground\">\n                      17 specialized centres fostering research and innovation\n                    </p>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    {centres.map((centre, index) => (\n                      <Card key={centre.name} className=\"p-6 hover:shadow-lg transition-shadow\" data-testid={`centre-${index}`}>\n                        <CardHeader className=\"p-0 pb-4\">\n                          <CardTitle className=\"flex items-center\">\n                            <FlaskConical className=\"w-6 h-6 mr-2 text-primary\" />\n                            {centre.name}\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"p-0\">\n                          <p className=\"text-muted-foreground\">{centre.description}</p>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n\n                  <Card className=\"p-8 bg-gradient-to-r from-secondary/10 to-primary/10\">\n                    <div className=\"text-center\">\n                      <h3 className=\"text-2xl font-semibold mb-4\">Research Opportunities</h3>\n                      <p className=\"text-muted-foreground mb-6\">\n                        Our centres provide excellent opportunities for students to engage in meaningful research \n                        and contribute to societal development through innovative projects and initiatives.\n                      </p>\n                      <Button variant=\"outline\" data-testid=\"explore-research\">\n                        Explore Research Opportunities\n                      </Button>\n                    </div>\n                  </Card>\n                </div>\n              </TabsContent>\n\n              {/* Placement Cell */}\n              <TabsContent value=\"placement\" id=\"placement\">\n                <div className=\"space-y-8\">\n                  <div className=\"text-center\">\n                    <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"placement-title\">\n                      Placement & Career Development\n                    </h2>\n                    <p className=\"text-lg text-muted-foreground\">\n                      Comprehensive career support and placement assistance\n                    </p>\n                  </div>\n\n                  <div className=\"grid lg:grid-cols-2 gap-8\">\n                    <Card className=\"p-8\">\n                      <CardHeader className=\"p-0 mb-6\">\n                        <CardTitle className=\"flex items-center text-2xl\">\n                          <Briefcase className=\"w-6 h-6 mr-2 text-primary\" />\n                          Our Mission\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"p-0\">\n                        <p className=\"text-muted-foreground mb-6\">\n                          The Placement & Career Development Cell ensures optimal career opportunities for students \n                          through industry partnerships, training programs, and comprehensive career guidance.\n                        </p>\n                        <ul className=\"space-y-3\">\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Year-round placement activities</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Industry partnerships and networking</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Personality development programs</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Internship opportunities</span>\n                          </li>\n                        </ul>\n                      </CardContent>\n                    </Card>\n\n                    <Card className=\"p-8\">\n                      <CardHeader className=\"p-0 mb-6\">\n                        <CardTitle className=\"flex items-center text-2xl\">\n                          <Trophy className=\"w-6 h-6 mr-2 text-accent\" />\n                          Services Offered\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"p-0\">\n                        <div className=\"space-y-4\">\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Training Programs</h4>\n                            <p className=\"text-sm text-muted-foreground\">Resume writing, interview skills, group discussions</p>\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Industry Interaction</h4>\n                            <p className=\"text-sm text-muted-foreground\">Guest lectures, workshops, webinars by industry experts</p>\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Career Counseling</h4>\n                            <p className=\"text-sm text-muted-foreground\">Individual guidance and career pathway planning</p>\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Alumni Network</h4>\n                            <p className=\"text-sm text-muted-foreground\">Connect with successful alumni for mentorship</p>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-3 gap-6\">\n                    <Card className=\"p-6 text-center\">\n                      <h3 className=\"text-2xl font-bold text-primary mb-2\">85%+</h3>\n                      <p className=\"font-semibold mb-1\">Placement Rate</p>\n                      <p className=\"text-sm text-muted-foreground\">Annual placement success</p>\n                    </Card>\n                    <Card className=\"p-6 text-center\">\n                      <h3 className=\"text-2xl font-bold text-accent mb-2\">100+</h3>\n                      <p className=\"font-semibold mb-1\">Companies</p>\n                      <p className=\"text-sm text-muted-foreground\">Recruiting partners</p>\n                    </Card>\n                    <Card className=\"p-6 text-center\">\n                      <h3 className=\"text-2xl font-bold text-secondary mb-2\">₹15L+</h3>\n                      <p className=\"font-semibold mb-1\">Highest Package</p>\n                      <p className=\"text-sm text-muted-foreground\">Annual CTC offered</p>\n                    </Card>\n                  </div>\n                </div>\n              </TabsContent>\n\n              {/* Library */}\n              <TabsContent value=\"library\" id=\"library\">\n                <div className=\"space-y-8\">\n                  <div className=\"text-center\">\n                    <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"library-title\">\n                      Library Services\n                    </h2>\n                    <p className=\"text-lg text-muted-foreground\">\n                      State-of-the-art library with automated systems and digital resources\n                    </p>\n                  </div>\n\n                  <div className=\"grid lg:grid-cols-2 gap-8\">\n                    <Card className=\"p-8\">\n                      <CardHeader className=\"p-0 mb-6\">\n                        <CardTitle className=\"flex items-center text-2xl\">\n                          <BookOpen className=\"w-6 h-6 mr-2 text-primary\" />\n                          Library Features\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"p-0\">\n                        <ul className=\"space-y-3\">\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">RFID and KOHA software integration</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Separate reading rooms for focused study</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Digital resources and e-journals</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Online catalog (WEBOPAC) access</span>\n                          </li>\n                          <li className=\"flex items-start\">\n                            <CheckCircle className=\"w-5 h-5 mr-3 mt-0.5 text-primary\" />\n                            <span className=\"text-sm\">Extended hours during exams</span>\n                          </li>\n                        </ul>\n                      </CardContent>\n                    </Card>\n\n                    <Card className=\"p-8\">\n                      <CardHeader className=\"p-0 mb-6\">\n                        <CardTitle className=\"flex items-center text-2xl\">\n                          <ExternalLink className=\"w-6 h-6 mr-2 text-accent\" />\n                          E-Resources\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"p-0\">\n                        <div className=\"space-y-4\">\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Digital Collections</h4>\n                            <p className=\"text-sm text-muted-foreground\">Access to DELNET, N-LIST, and NDL resources</p>\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Online Courses</h4>\n                            <p className=\"text-sm text-muted-foreground\">NPTEL and e-PG Pathshala course materials</p>\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Research Databases</h4>\n                            <p className=\"text-sm text-muted-foreground\">Access to academic journals and research papers</p>\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold mb-2\">Ask the Librarian</h4>\n                            <p className=\"text-sm text-muted-foreground\">Expert assistance for research and queries</p>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  <Card className=\"p-8 bg-gradient-to-r from-primary/10 to-secondary/10\">\n                    <div className=\"text-center\">\n                      <h3 className=\"text-2xl font-semibold mb-4\">Library Portal</h3>\n                      <p className=\"text-muted-foreground mb-6\">\n                        Access our comprehensive library portal for catalog search, resource booking, \n                        and digital collection access from anywhere on campus.\n                      </p>\n                      <Button data-testid=\"library-portal\">\n                        Visit Library Portal\n                      </Button>\n                    </div>\n                  </Card>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </section>\n\n        {/* Support Services */}\n        <section className=\"py-16 bg-muted\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"support-title\">\n                Student Support Services\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Comprehensive support for your academic and personal well-being\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {supportServices.map((service, index) => (\n                <Card key={service.title} className=\"p-6 text-center hover:shadow-lg transition-shadow\" data-testid={`support-service-${index}`}>\n                  <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <service.icon className=\"w-8 h-8 text-primary-foreground\" />\n                  </div>\n                  <h3 className=\"font-semibold mb-2\">{service.title}</h3>\n                  <p className=\"text-sm text-muted-foreground\">{service.description}</p>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Quick Access Resources */}\n        <section id=\"forms\" className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-bold mb-4 font-serif\" data-testid=\"resources-title\">\n                Quick Access Resources\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Essential resources at your fingertips\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {resources.map((resource, index) => (\n                <Card key={resource.title} className={`bg-${resource.color} text-${resource.color}-foreground p-8`} data-testid={`resource-${index}`}>\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                    <resource.icon className=\"w-5 h-5 mr-2\" />\n                    {resource.title}\n                  </h3>\n                  <ul className=\"space-y-2 text-sm mb-6\">\n                    {resource.items.map((item, itemIndex) => (\n                      <li key={item} className=\"flex items-center\" data-testid={`resource-item-${index}-${itemIndex}`}>\n                        <span className=\"mr-2\">•</span>\n                        {item}\n                      </li>\n                    ))}\n                  </ul>\n                  <Button \n                    className={`w-full bg-${resource.color}-foreground text-${resource.color} hover:bg-${resource.color}-foreground/90`}\n                    data-testid={`access-${resource.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                  >\n                    Access Resources\n                  </Button>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n","size_bytes":29812},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/events-carousel.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState, useEffect } from \"react\";\n\nimport image1 from \"@assets/Screenshot 2025-10-02 162408_1759402604596.png\";\nimport image2 from \"@assets/Screenshot 2025-10-02 162348_1759402604596.png\";\nimport image3 from \"@assets/Screenshot 2025-10-02 162333_1759402604597.png\";\nimport image4 from \"@assets/Screenshot 2025-10-02 162306_1759402604597.png\";\nimport image5 from \"@assets/Screenshot 2025-10-02 162244_1759402604598.png\";\nimport image6 from \"@assets/Screenshot 2025-10-02 162227_1759402604599.png\";\nimport image7 from \"@assets/Screenshot 2025-10-02 162213_1759402604599.png\";\nimport image8 from \"@assets/Screenshot 2025-10-02 162156_1759402604600.png\";\nimport image9 from \"@assets/Screenshot 2025-10-02 162139_1759402604600.png\";\nimport image10 from \"@assets/Screenshot 2025-10-02 162125_1759402604601.png\";\nimport image11 from \"@assets/Screenshot 2025-10-02 162110_1759402604601.png\";\nimport image12 from \"@assets/Screenshot 2025-10-02 162054_1759402604602.png\";\nimport image13 from \"@assets/Screenshot 2025-10-02 162041_1759402604602.png\";\nimport image14 from \"@assets/Screenshot 2025-10-02 162030_1759402604605.png\";\nimport image15 from \"@assets/Screenshot 2025-10-02 162016_1759402604606.png\";\nimport image16 from \"@assets/Screenshot 2025-10-02 161959_1759402604607.png\";\nimport image17 from \"@assets/Screenshot 2025-10-02 162016_1759402604606.png\";\n\nconst collegeImages = [\n  { src: image1, caption: \"College Achievement Event\" },\n  { src: image2, caption: \"Student Celebrations\" },\n  { src: image3, caption: \"Award Ceremony\" },\n  { src: image4, caption: \"Student Success\" },\n  { src: image5, caption: \"College Event\" },\n  { src: image6, caption: \"Academic Event\" },\n  { src: image7, caption: \"Cultural Program\" },\n  { src: image8, caption: \"Student Achievement\" },\n  { src: image9, caption: \"Award Presentation\" },\n  { src: image10, caption: \"Trophy Presentation\" },\n  { src: image11, caption: \"Student Celebration\" },\n  { src: image12, caption: \"Award Event\" },\n  { src: image13, caption: \"College Milestone\" },\n  { src: image14, caption: \"Recognition Ceremony\" },\n  { src: image15, caption: \"Student Victory\" },\n  { src: image16, caption: \"Success Celebration\" },\n  { src: image17, caption: \"Achievement Moment\" },\n];\n\nexport default function EventsCarousel() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % collegeImages.length);\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const goToPrevious = () => {\n    setCurrentIndex((prev) => (prev - 1 + collegeImages.length) % collegeImages.length);\n  };\n\n  const goToNext = () => {\n    setCurrentIndex((prev) => (prev + 1) % collegeImages.length);\n  };\n\n  return (\n    <section className=\"py-16 bg-background\" data-testid=\"section-events-carousel\">\n      <div className=\"container mx-auto px-6 md:px-8\">\n        <div className=\"mb-12 text-center\">\n          <h2 className=\"text-4xl md:text-5xl font-bold font-serif text-primary mb-2\" data-testid=\"heading-events-carousel\">\n            College Achievements & Events\n          </h2>\n          <div className=\"w-24 h-1 bg-primary mx-auto mt-4\"></div>\n        </div>\n        \n        <div className=\"max-w-6xl mx-auto\">\n\n          <Card className=\"relative overflow-hidden bg-background shadow-lg\">\n            <div className=\"relative aspect-video w-full bg-muted\">\n              <img\n                src={collegeImages[currentIndex].src}\n                alt={collegeImages[currentIndex].caption}\n                className=\"w-full h-full object-cover\"\n                data-testid={`img-event-${currentIndex}`}\n              />\n\n              {collegeImages[currentIndex].caption && (\n                <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent text-white p-6\">\n                  <p className=\"text-center text-lg font-medium\" data-testid=\"text-event-caption\">\n                    {collegeImages[currentIndex].caption}\n                  </p>\n                </div>\n              )}\n\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white\"\n                onClick={goToPrevious}\n                data-testid=\"button-event-prev\"\n              >\n                <ChevronLeft className=\"h-6 w-6\" />\n              </Button>\n\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white\"\n                onClick={goToNext}\n                data-testid=\"button-event-next\"\n              >\n                <ChevronRight className=\"h-6 w-6\" />\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center gap-2 p-4 flex-wrap\">\n              {collegeImages.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentIndex(index)}\n                  className={`w-3 h-3 rounded-full transition-all ${\n                    index === currentIndex \n                      ? \"bg-primary scale-110\" \n                      : \"bg-muted-foreground/30 hover:bg-muted-foreground/50\"\n                  }`}\n                  data-testid={`button-event-dot-${index}`}\n                  aria-label={`Go to image ${index + 1}`}\n                />\n              ))}\n            </div>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5705},"client/src/components/gallery-carousel.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card } from \"@/components/ui/card\";\nimport { ChevronLeft, ChevronRight, ImageIcon } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState, useEffect } from \"react\";\nimport type { GalleryImage } from \"@shared/schema\";\n\nexport default function GalleryCarousel() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const { data: images, isLoading } = useQuery<GalleryImage[]>({\n    queryKey: [\"/api/gallery\"],\n  });\n\n  useEffect(() => {\n    if (!images || images.length === 0) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % images.length);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [images]);\n\n  const goToPrevious = () => {\n    if (!images || images.length === 0) return;\n    setCurrentIndex((prev) => (prev - 1 + images.length) % images.length);\n  };\n\n  const goToNext = () => {\n    if (!images || images.length === 0) return;\n    setCurrentIndex((prev) => (prev + 1) % images.length);\n  };\n\n  if (isLoading) {\n    return (\n      <section className=\"py-16 bg-muted\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-5xl mx-auto\">\n            <div className=\"w-full h-96 bg-muted animate-pulse rounded-lg\"></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (!images || images.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"py-16 bg-muted\" data-testid=\"section-gallery\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-5xl mx-auto\">\n          <h2 className=\"text-4xl font-bold mb-8 text-center font-serif\" data-testid=\"heading-gallery\">\n            Gallery\n          </h2>\n\n          <Card className=\"relative overflow-hidden bg-background\">\n            <div className=\"relative aspect-video w-full\">\n              {images[currentIndex].imageUrl ? (\n                <img\n                  src={images[currentIndex].imageUrl}\n                  alt={images[currentIndex].caption || \"Gallery image\"}\n                  className=\"w-full h-full object-cover\"\n                  data-testid={`img-gallery-${currentIndex}`}\n                />\n              ) : (\n                <div className=\"w-full h-full flex items-center justify-center bg-muted\">\n                  <ImageIcon className=\"w-20 h-20 text-muted-foreground\" />\n                </div>\n              )}\n\n              {images[currentIndex].caption && (\n                <div className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white p-4\">\n                  <p className=\"text-center text-lg\" data-testid=\"text-gallery-caption\">\n                    {images[currentIndex].caption}\n                  </p>\n                </div>\n              )}\n\n              {images.length > 1 && (\n                <>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"\n                    onClick={goToPrevious}\n                    data-testid=\"button-gallery-prev\"\n                  >\n                    <ChevronLeft className=\"h-6 w-6\" />\n                  </Button>\n\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white\"\n                    onClick={goToNext}\n                    data-testid=\"button-gallery-next\"\n                  >\n                    <ChevronRight className=\"h-6 w-6\" />\n                  </Button>\n                </>\n              )}\n            </div>\n\n            {images.length > 1 && (\n              <div className=\"flex justify-center gap-2 p-4\">\n                {images.map((_, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentIndex(index)}\n                    className={`w-3 h-3 rounded-full transition-colors ${\n                      index === currentIndex ? \"bg-primary\" : \"bg-muted-foreground/30\"\n                    }`}\n                    data-testid={`button-gallery-dot-${index}`}\n                  />\n                ))}\n              </div>\n            )}\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4344},"client/src/lib/auth.tsx":{"content":"import { createContext, useContext, useState, useEffect, type ReactNode } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { User, RegisterUser, LoginUser } from \"@shared/schema\";\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  login: (credentials: LoginUser) => Promise<void>;\n  register: (data: RegisterUser) => Promise<void>;\n  logout: () => Promise<void>;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const queryClient = useQueryClient();\n  \n  const { data: user, isLoading } = useQuery<User>({\n    queryKey: [\"/api/auth/me\"],\n    retry: false,\n    refetchOnWindowFocus: false,\n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (credentials: LoginUser) => {\n      const response = await apiRequest(\"POST\", \"/api/auth/login\", credentials);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/me\"] });\n    },\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: async (data: RegisterUser) => {\n      const response = await apiRequest(\"POST\", \"/api/auth/register\", data);\n      return response.json();\n    },\n  });\n\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      await apiRequest(\"POST\", \"/api/auth/logout\");\n    },\n    onSuccess: () => {\n      queryClient.setQueryData([\"/api/auth/me\"], null);\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/me\"] });\n    },\n  });\n\n  const login = async (credentials: LoginUser) => {\n    await loginMutation.mutateAsync(credentials);\n  };\n\n  const register = async (data: RegisterUser) => {\n    await registerMutation.mutateAsync(data);\n  };\n\n  const logout = async () => {\n    await logoutMutation.mutateAsync();\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user || null,\n        isLoading,\n        login,\n        register,\n        logout,\n        isAuthenticated: !!user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n","size_bytes":2398}},"version":1}